@INPROCEEDINGS{6196988, 
author={Farid, W.M. and Mitropoulos, F.J.}, 
booktitle={Southeastcon, 2012 Proceedings of IEEE}, 
title={Novel lightweight engineering artifacts for modeling non-functional requirements in agile processes}, 
year={2012}, 
pages={1-7}, 
abstract={Agile software development methodologies, such as Scrum, have gained tremendous popularity and proven successful in quickly delivering quality Functional Requirements (FRs). However, agile methodologies have not adequately modeled Non-Functional Requirements (NFRs) and their potential solutions (operationalizations) with FRs in early development phases. This research proposes three fundamental agile artifacts to model FRs, NFRs, and their potential solutions in a visual environment. First, FRs are modeled through Agile Use Cases (AUCs). Second, NFRs are modeled through Agile Loose Cases (ALCs). Third, NFRs potential solutions are modeled through Agile Choose Cases (ACCs). AUCs are newly proposed hybrid of use cases and agile user stories. ALCs are proposed loosely-defined agile NFRs. ACCs are proposed potential solutions (operationalizations) for ALCs. The three artifacts are combined in a visual framework to promote agile modeling of NFRs (primarily) and how they are linked to FRs. The artifacts are the building blocks of a more comprehensive framework for modeling NFRs in agile software development processes.}, 
keywords={formal specification;software prototyping;agile artifacts;agile choose cases;agile loose cases;agile modeling;agile processes;agile software development;agile use cases;agile user stories;lightweight engineering artifacts;nonfunctional requirements;visual framework;Business;Encryption;Joining processes;Programming;User interfaces;Visualization;Agile Choose Case;Agile Loose Case;Agile Requirements Modeling;Agile Use Case;NFRs;NORMAP Methodology;Scrum}, 
doi={10.1109/SECon.2012.6196988}, 
ISSN={1091-0050}, 
month={March},}
@INPROCEEDINGS{6986022, 
author={Parizi, R.M. and Gandomani, T.J. and Nafchi, M.Z.}, 
booktitle={Software Engineering Conference (MySEC), 2014 8th Malaysian}, 
title={Hidden facilitators of agile transition: Agile coaches and agile champions}, 
year={2014}, 
pages={246-250}, 
abstract={Prevalence of Agile methods in software companies is increasing. Software companies need to employ these methods to overcome the inherent challenges of traditional methods. However, transitioning to Agile approach is a topic of debate and needs to be supported by appropriate facilitators. Conducting a large-scale research study, revealed the most important Agile transition facilitators. This paper solely presents two hidden facilitators of Agile transition, Agile coaches and Agile champions, which rarely have been taken into consideration. Both of these facilitators directly impress the people involved in the transition. People-intensive nature of Agile methods and critical role of the people in the transition process reflect the importance of these facilitators when a software company is in the transition process. This study showed that considering these facilitators when can highly impress the success of the transition and revealed the real responsibilities of Agile coaches and Agile champions when transitioning to Agile.}, 
keywords={software prototyping;agile champions;agile coaches;agile methods;agile transition facilitators;software companies;Agile software development;Collaboration;Companies;Educational institutions;Software;Software engineering;Agile champions;Agile coaches;Agile software development;Agile transformation;Agile transition;Grounded Theory;Software Engineering}, 
doi={10.1109/MySec.2014.6986022}, 
month={Sept},}
@INPROCEEDINGS{6189437, 
author={Gregorio, D.D.}, 
booktitle={Systems Conference (SysCon), 2012 IEEE International}, 
title={How the Business Analyst supports and encourages collaboration on agile projects}, 
year={2012}, 
pages={1-4}, 
abstract={Agile teams need the Business Analyst (BA) to clearly define and communicate the detailed user stories to ensure a successful product. MITRE's Corporate IT Systems Engineering department supports software development activities which recently adopted an agile methodology. Unlike the detailed requirements documentation of more traditional, waterfall-based projects, we have found the streamlined “user stories” inadequate for developers or testers. Our BA experiences with eliciting user story details and maintaining the backlog for sprint planning are a critical component to agile development. BA activities include grooming the backlog, documenting user stories with detailed contracts, and performing user story verification through testing. This paper will review the techniques we have used during agile projects to manage the sprint cycle, including templates for user story management. Capturing artifacts from other agile projects and documenting recommended agile process guidelines can help projects be successful through reuse and collaboration. Many agile projects generate artifacts that are lost or are created for the benefit of only their project and discarded when through. Agile encourages lean documentation in order to maximize agility. We established a repository using an internal website where we documented corporte IT processes and share agile templates and samples. This repository includes samples of sprint schedules, backlog lists, burn-down charts, retrospective items, and user stories. The corporate IT process recommends agile but also includes traditional waterfall guidance and correlates the two different approaches. All projects, whether they are agile or otherwise, need similar deliverables, including project schedules and project plans. In correlating agile considerations to a waterfall approach, we hope to ease the transition to agile. The process guidance and repository site promotes collaboration, reuse, and review among agile pro- ects within the organization.}, 
keywords={Web sites;organisational aspects;project management;software maintenance;software management;software prototyping;MITRE Corporate IT Systems Engineering department;agile development;agile methodology;agile projects;agile samples;agile templates;backlog lists;backlog maintenance;burn-down charts;business analyst;corporate IT processes;internal Web site;lean documentation;project plans;project schedules;retrospective items;software development activities;sprint cycle management;sprint planning;sprint schedules;user story detail elicitation;user story management;user story verification;waterfall-based projects;Business;Collaboration;Documentation;Schedules;Software;Testing;agile;business analyst;scrum;user stories}, 
doi={10.1109/SysCon.2012.6189437}, 
month={March},}
@INPROCEEDINGS{6681340, 
author={Murphy, B. and Bird, C. and Zimmermann, T. and Williams, L. and Nagappan, N. and Begel, A.}, 
booktitle={Empirical Software Engineering and Measurement, 2013 ACM / IEEE International Symposium on}, 
title={Have Agile Techniques been the Silver Bullet for Software Development at Microsoft?}, 
year={2013}, 
pages={75-84}, 
abstract={Background. The pressure to release high-quality, valuable software products at an increasingly faster rate is forcing software development organizations to adapt their development practices. Agile techniques began emerging in the mid-1990s in response to this pressure and to increased volatility of customer requirements and technical change. Theoretically, agile techniques seem to be the silver bullet for responding to these pressures on the software industry. Aims. This paper tracks the changing attitudes to agile adoption and techniques, within Microsoft, in one of the largest longitudinal surveys of its kind (2006-2012). Method. We collected the opinions of 1,969 agile and non-agile practitioners in five surveys over a six-year period. Results. The survey results reveal that despite intense market pressure, the growth of agile adoption at Microsoft is slower than would be expected. Additionally, no individual agile practice exhibited strong growth trends. We also found that while development practices of teams may be similar, some perceive and declare themselves to be following an agile methodology while others do not. Both agile and non-agile practitioners agree on the relative benefits and problem areas of agile techniques. Conclusions. We found no clear trends in practice adoption. Non-agile practitioners are less enamored of the benefits and more strongly in agreement with the problem areas. The ability for agile practices to be used by large-scale teams generally concerned all respondents, which may limit its future adoption.}, 
keywords={DP industry;software development management;software prototyping;team working;Microsoft;agile adoption;agile methodology;agile practice;agile techniques;changing attitudes;customer requirements;development practices;high-quality valuable software products;large-scale teams;market pressure;silver bullet;software development organizations;software industry;technical change;Companies;Industries;Interviews;Market research;Software;Testing;Agile;Agile development;Interviews;Survey}, 
doi={10.1109/ESEM.2013.21}, 
ISSN={1938-6451}, 
month={Oct},}
@INPROCEEDINGS{6986024, 
author={Dewi, D.A. and Muniandy, M.}, 
booktitle={Software Engineering Conference (MySEC), 2014 8th Malaysian}, 
title={The agility of agile methodology for teaching and learning activities}, 
year={2014}, 
pages={255-259}, 
abstract={This paper presents the review of literatures that shows the contribution of the agile methodology towards teaching and learning environment at university level. Teaching and learning at university has since migrated from traditional learning to active learning methodology where students are expected to learn by doing rather than listening passively to lectures alone. The agile methodology naturally has promoted the active participation of team members during system development phases. The nature of agile development methodology has been identified as abundantly compatible and supportive towards active academic learning. Some literature have proposed ways of adopting agile into active learning to improve teaching and learning processes and have highlighted this method as a great success. With the review presented in this paper, we would like to highlight how efficient the agile concept is in tackling several situations in academic learning as shown by an interesting mapping of agile principles to the classroom environment. With that, we hope to bring more options to improve active teaching and learning delivery by adopting agile methodology. On the other hand, few papers have used the academic environment to measure the agile principles. By highlighting this, we offer options for the agile evaluation framework to consider academic environment as a tool to obtain the agile performance feedback.}, 
keywords={computer aided instruction;teaching;academic environment;active academic learning;active teaching;agile development methodology;agile evaluation framework;agile methodology;agile performance feedback;agile principles;classroom environment;learning activity;learning delivery;learning environment;learning methodology;learning process;system development phases;teaching process;team members;university level;Collaboration;Educational institutions;Electronic learning;Programming;Software;Software engineering;Agile;active learning;agile e-learning;agile education;teaching and learning}, 
doi={10.1109/MySec.2014.6986024}, 
month={Sept},}
@INPROCEEDINGS{6612878, 
author={Suzuki, S. and Shiohama, R. and Kadoya, M. and Sakamoto, K. and Washizaki, H. and Fukazawa, Y.}, 
booktitle={Agile Conference (AGILE), 2013}, 
title={Analyzing Effectiveness of Workshops for Learning Agile Development Principles}, 
year={2013}, 
pages={50-59}, 
abstract={Workshops are sometimes known as effective ways to learn the human and social factors of software engineering. However, their effectiveness in learning agile development principles in particular has not yet been determined, despite the fact that numerous agile development workshops have been held over the years. In this paper, we analyze the effectiveness of agile development workshops through an experiment, and show that one of representative workshops is indeed effective at learning agile principles. Self-study is another commonly used method to learn something new. Therefore, we compare the effectiveness of workshops with that of self-study to better illustrate the effectiveness of agile development workshops. In our experiment, we examine 7 workshop subjects and 8 self-study subjects, and compare their scores on the agile mind check, which is a method used to measure their degree of mastery of agile principles. As a result, we demonstrate the effectiveness of agile development workshops, especially those that simulate actual experiences. We also show that one of workshops is more effective than self-study regarding the agile mind check score.}, 
keywords={computer aided instruction;social aspects of automation;software prototyping;agile development workshops;agile mind check;agile principles;analyzing effectiveness;learning agile development principle;social factors;software engineering;Conferences;Internet;Market research;Software;Software engineering;Systematics;Web sites;Agile development workshops;workshop effectiveness}, 
doi={10.1109/AGILE.2013.12}, 
month={Aug},}
@INPROCEEDINGS{6612876, 
author={Hellmann, T.D. and Chokshi, A. and Abad, Z.S.H. and Pratte, S. and Maurer, F.}, 
booktitle={Agile Conference (AGILE), 2013}, 
title={Agile Testing: A Systematic Mapping across Three Conferences: Understanding Agile Testing in the XP/Agile Universe, Agile, and XP Conferences}, 
year={2013}, 
pages={32-41}, 
abstract={Unit and acceptance testing are central to agile software development, but is that all there is to agile testing? We build on previous work to provide a systematic mapping of agile testing publications at major agile conferences. The analysis presented in this paper allows us to answer research questions like: what is agile testing used for, what types of studies on agile testing have been published, what problems do people have when performing agile testing, and what benefits do these publications offer? We additionally explore topics such as: who are the major authors in this field, in which countries do these authors work, what tools are mentioned, and is the field driven by academics, practitioners, or collaborations? This paper presents our analysis of these topics in order to better structure future work in the field of agile testing and to provide a better understanding of what this field actually entails.}, 
keywords={program testing;software prototyping;XP-Agile Universe;acceptance testing;agile software development;agile testing;systematic mapping;unit testing;Abstracts;Context;Electric breakdown;Graphical user interfaces;Software;Systematics;Testing;agile software development;empirical;software testing;systematic mapping;test-driven development;testing tools}, 
doi={10.1109/AGILE.2013.10}, 
month={Aug},}
@INPROCEEDINGS{6986021, 
author={Gandomani, T.J. and Zulzalil, H. and Nafchi, M.Z.}, 
booktitle={Software Engineering Conference (MySEC), 2014 8th Malaysian}, 
title={Agile transformation: What is it about?}, 
year={2014}, 
pages={240-245}, 
abstract={Agile software development by offering new values motivates software companies to use Agile methods instead of traditional methods. However, reviewing the literature shows that leaving traditional methods and moving to Agile methods is subjected to many serious challenges. We have conducted a large-scale research study to empirically discover various aspects of Agile transformation. Our Grounded Theory study showed the general outline of Agile transformation. The main aim of this paper is to figure out the most important concepts that need to be considered when moving to Agile. This study showed that Agile transformation comprises many concepts, activities, and steps including transformation prerequisites, facilitators, framework, assessment, coaching, and so on. Companies need to be familiar with these concepts before starting transitioning to Agile.}, 
keywords={DP industry;software prototyping;agile methods;agile software development;agile transformation;grounded theory;software companies;Agile software development;Companies;Computers;Interviews;Software;Training;Agile methods;Agile software development;Agile transformation;Agile transition;Grounded Theory}, 
doi={10.1109/MySec.2014.6986021}, 
month={Sept},}
@INPROCEEDINGS{7044096, 
author={Uskov, V. and Vada, H.G.}, 
booktitle={Frontiers in Education Conference (FIE), 2014 IEEE}, 
title={Student-faculty collaboration on design of innovative agile software engineering curriculum}, 
year={2014}, 
pages={1-8}, 
abstract={The use of agile methodology components - agile methods, techniques, framework, tools, and applications - has more than tripled in the several most recent years because multiple large-size, middle-size and mostly small-size enterprises move from traditional heavily regulated processes-driven business approaches towards customer-focused and value-driven flexible business approaches. The performed analysis of the current status of agile methodology applications in industry clearly shows that it will soon need a significant number of well educated and highly skilled specialists in this area - agile software development project managers, agile software engineers, analysts, developers, testers, etc. The findings and outcomes of performed research motivated the authors - faculty and graduate student at Bradley University (Peoria, IL, U.S.A.)-to propose and design innovative Agile Software Engineering academic curriculum. This paper presents the main findings and outcomes of analysis, design and development phases of innovative Agile Software Engineering curriculum and courseware creation.}, 
keywords={computer science education;further education;software prototyping;Bradley University;agile applications;agile framework;agile methodology applications;agile methods;agile techniques;agile tools;courseware creation;curriculum design;customer-focused flexible business approach;innovative agile software engineering curriculum;processes-driven business approach;student-faculty collaboration;value-driven flexible business approach;Iron;agile software engineering;curriculum;student-faculty collaboration}, 
doi={10.1109/FIE.2014.7044096}, 
month={Oct},}
@INPROCEEDINGS{6475408, 
author={Rodriguez, P. and Markkula, J. and Oivo, M. and Turula, K.}, 
booktitle={Empirical Software Engineering and Measurement (ESEM), 2012 ACM-IEEE International Symposium on}, 
title={Survey on agile and lean usage in finnish software industry}, 
year={2012}, 
pages={139-148}, 
abstract={Earlier empirical studies have demonstrated the interest that agile methods have generated in the software industry. Currently, lean approaches are increasingly adopted for complementing agile methods in software processes. With the goal of providing up-to-day results that can be used by organizations implementing or planning to implement agile and/or lean methods, we have conducted a study on the current stage of agile and lean adoption and usage in the software industry. For this purpose, we conducted an extensive survey among Finnish software practitioners in 2011, using the membership registry of The Finnish Information Processing Association (FIPA)as a sampling frame. 408 responses were collected from 200 software intensive organizations in the study. The survey included questions for identifying the rate of agile and lean usage in software organizations as well as the implementation of specific methods and practices, goals in adopting agile and lean, reasons for not applying these methods and effects of the agile and lean usage. The results of the survey reveal that a majority of respondents' organizational units are using agile and/or lean methods (58%). Furthermore, lean appears as a new player, being used by 24% of respondents, mainly in combination with agile (21%). The reasons and benefits for using agile and lean methods appeared to correspond in most parts to the findings of the earlier research. Generally, the experiences of using agile and lean methods seem to be rather positive, although challenges, such as obtaining management support and limitations for scaling agile in distributed settings, were also identified.}, 
keywords={lean production;software houses;software process improvement;software prototyping;FIPA;Finnish software industry;Finnish software practitioners;The Finnish Information Processing Association;agile methods;agile usage;lean approaches;lean usage;sampling frame;software intensive organizations;software organizations;software process;Companies;Industries;Programming;Software;Standards organizations;Variable speed drives;Agile;lean;survey}, 
doi={10.1145/2372251.2372275}, 
ISSN={1938-6451}, 
month={Sept},}
@INPROCEEDINGS{6462672, 
author={Farid, W.M.}, 
booktitle={Software Engineering Conference (APSEC), 2012 19th Asia-Pacific}, 
title={The NORMAP Methodology: Lightweight Engineering of Non-functional Requirements for Agile Processes}, 
year={2012}, 
volume={1}, 
pages={322-325}, 
abstract={Agile software development methodologies, such as Scrum, have become very popular in quickly delivering quality Functional Requirements (FRs). However, agile methodologies have not sufficiently identified, modeled, and linked Non-Functional Requirements (NFRs) - such as security and performance - with FRs in early requirements phases. This research presents a lightweight engineering of NFRs for agile processes. The proposed Non-functional Requirements Modeling for Agile Processes (NORMAP) Methodology identifies, links, and models Agile Loose Cases (ALCs) with Agile Use Cases (AUCs) and Agile Choose Cases (ACCs). A lightweight adapted version of the NFR Framework was developed including 25 important NFRs. Further, a risk-driven agile requirements implementation sequence and a visual tree-like view were developed. The methodology was validated through developing a Java-based modeling simulation tool and two case studies.}, 
keywords={formal specification;software prototyping;Java-based modeling simulation tool;NORMAP methodology;Scrum;agile choose cases;agile loose cases;agile software development;agile use cases;lightweight engineering;nonfunctional requirements;risk-driven agile requirements;visual tree-like view;Computational modeling;Joining processes;Measurement;Project management;Software;Visualization;NORMAP methodology;NORMATIC;Scrum;agile non-functional requirements;agile requirements modeling}, 
doi={10.1109/APSEC.2012.23}, 
ISSN={1530-1362}, 
month={Dec},}
@INPROCEEDINGS{6005500, 
author={Xiaofeng Wang}, 
booktitle={Agile Conference (AGILE), 2011}, 
title={The Combination of Agile and Lean in Software Development: An Experience Report Analysis}, 
year={2011}, 
pages={1-9}, 
abstract={There has been a noticeable focus shift from agile methods such as extreme Programming (XP) and Scrum to lean software development in the last several years, which is indicated as "from agile to lean". However, the reality may not be as simple or linear as the term implies. To provide a better understanding of the combined use of agile and lean approaches in software development, a set of experience reports were analysed. These reports were published in the past conferences dedicated to agile software development and report experiences of using both agile and lean. The results of the analysis show that agile and lean can be combined in different manners for different purposes in software development. Lean is often applied as guiding principles for agile development. When combined at practice level, flow-based lean processes tend to substitute time-boxed agile processes.}, 
keywords={software development management;software prototyping;Scrum;agile method;agile software development;experience report analysis;extreme programming;lean software development;time-boxed agile process;Companies;Data analysis;Programming;Software;Systematics;Scrum;XP;agile methods;agile software development;experience report;lean software development;lean thinking}, 
doi={10.1109/AGILE.2011.36}, 
month={Aug},}
@INPROCEEDINGS{5261104, 
author={Doshi, C. and Doshi, D.}, 
booktitle={Agile Conference, 2009. AGILE '09.}, 
title={A Peek into an Agile Infected Culture}, 
year={2009}, 
pages={84-89}, 
abstract={What happens when your organization practices Agile software development for many years? Well, you get pretty good at Agile and you are able to apply Agile with reducing effort on challenging projects. But there is another interesting outcome which is that your people internalize Agile values, so much so that Agile becomes second-nature to everyone! In this paper we will show you how our culture is infected with Agile thinking, we will show you how we apply Agile to many ldquonon-softwarerdquo development activities like training- sessions, recruitment, staffing, office reforms, strategic decision making and more.}, 
keywords={DP management;Agile culture;Agile software development;Agile values internalize;Banking;Dairy products;Decision making;Feedback;History;Insurance;Management training;Programming;Recruitment;Resource management;Agile;Agile Values;Agile infected;Culture;Extreme Progaramming;India;Organization Culture;ThoughtWorks}, 
doi={10.1109/AGILE.2009.65}, 
month={Aug},}
@INPROCEEDINGS{4293565, 
booktitle={Agile Conference (AGILE), 2007}, 
title={AGILE 2007 - Title}, 
year={2007}, 
pages={i-iii}, 
abstract={The following topics are dealt with: agile teams; agile usability; agile method teaching; agile practices; agile architecture challenges; agile PMO; process improvement; product ownership; release management.}, 
keywords={software engineering;team working;agile PMO;agile architecture challenges;agile method teaching;agile practices;agile teams;agile usability;process improvement;product ownership;release management}, 
doi={10.1109/AGILE.2007.5}, 
month={Aug},}
@INPROCEEDINGS{6170017, 
author={Asnawi, A.L. and Gravell, A.M. and Wills, G.B.}, 
booktitle={AGILE India (AGILE INDIA), 2012}, 
title={Emergence of Agile Methods: Perceptions from Software Practitioners in Malaysia}, 
year={2012}, 
pages={30-39}, 
abstract={Agile methods are an established process for developing software nowadays. There is, however, less evidence on their usage among software practitioners in Malaysia. While the methods have become mainstream in other regions, that is not the case in this country. This paper empirically investigates the perceptions of Agile methods usage from seven organisations involving 14 software practitioners in Malaysia. Our participants are using Scrum and have a maximum of five years experience. We categorised our findings in terms of awareness, introduction, and challenges they are facing, together with the suggested and practiced solution from them. Interestingly, a change in mind set when practicing Agile was identified to be helpful in reducing the challenges. Lastly we present the practices in Agile they perceived to deliver the most benefits. We found that the use of Agile is still emerging in the country, and awareness is still lacking especially within the government sector. Although several challenges have been encountered when introducing Agile in their organisations, the benefits of Agile are reported to be in Agile practices such as: the involvement from all parties from the beginning, daily stand-up meeting, iterative and incremental, applying burn down chart, sprint and continuous integration. We aim to provide awareness and knowledge about Agile methods to the practitioners in the country and the nearby region. This paper can serve as a reference to the early adopters who intend to use Agile methods in the future.}, 
keywords={software prototyping;Malaysia;agile methods;software development;software practitioners;Companies;Government;Industries;Interviews;Programming;Software;Training;Agile methods;awareness;benefits;challenges;introduction;perceptions;practices;software process}, 
doi={10.1109/AgileIndia.2012.14}, 
month={Feb},}
@INPROCEEDINGS{6759183, 
author={Santos, V. and Goldman, A. and Filho, H. and Martins, D. and Cortes, M.}, 
booktitle={System Sciences (HICSS), 2014 47th Hawaii International Conference on}, 
title={The Influence of Organizational Factors on Inter-team Knowledge Sharing Effectiveness in Agile Environments}, 
year={2014}, 
pages={4729-4738}, 
abstract={Agile software development is known by focusing on interaction among team members to share knowledge. However, little guidance is provided to encourage interaction across agile teams. Based on a preliminary conceptual model, this paper examines influencing factors, such as organizational strategy, and communication flow and channels, regarding inter-team knowledge sharing (KS) effectiveness in agile environments. We analyze the characteristics and the influence of the mentioned factors through a survey research method. Data was gathered from seven Brazilian agile software organizations. We employed statistical analysis techniques, e.g., structural equation modeling and cross-table analysis, to analyze the results. Within the surveyed companies, organizational strategy reflects on moderate commitment towards knowledge. KS practices are carried out to an acceptable standard. Extensive communication flow and the use of several channels denote that agile companies are also fostering interaction across teams. We found strong relationship between these factors and the companies' experience on agile methods. As companies continue on an agile adoption program, they growingly focus on long-term goals and consider knowledge as strategic resource. However, they still need to improve strategy alignment to all organization levels. Thus, we recommend that agile companies consider these factors when striving on this endeavor.}, 
keywords={knowledge management;software prototyping;statistical analysis;team working;Brazilian agile software organizations;KS;agile adoption program;agile companies;agile environments;agile software development;communication channels;communication flow;conceptual model;cross-table analysis;interteam knowledge sharing effectiveness;organizational factors;organizational strategy;statistical analysis techniques;strategy alignment;structural equation modeling;survey research method;Companies;Context;Data collection;Mathematical model;Reliability;Software;Agile methods;Inter-team Knowledge Sharing;Organizational factors}, 
doi={10.1109/HICSS.2014.581}, 
month={Jan},}
@INPROCEEDINGS{6759191, 
author={Tripp, J.F. and Armstrong, D.J.}, 
booktitle={System Sciences (HICSS), 2014 47th Hawaii International Conference on}, 
title={Exploring the Relationship between Organizational Adoption Motives and the Tailoring of Agile Methods}, 
year={2014}, 
pages={4799-4806}, 
abstract={Advocates of agile information systems development methods originally called for implementation of the method in full - either perform all of the method's practices, or don't call it “agile”. Over time this quest for orthodoxy was replaced by the pragmatic tailoring of agile methods to the organization's environment. However, little empirical research has investigated the forces that impact the manner in which agile methods are tailored. This article describes an exploratory study that investigates the relationships between the motives for adopting agile methods, and the agile practices adopted. Using the source data from the VersionOne State of Agile 2011 survey, we identified a sample of 2304 agile practitioners. Our study finds that three motives for agile adoption - a desire for increased software quality, increased efficiency, or increased effectiveness are each associated with different configurations of project management focused agile practices and agile practices related to the software development approach.}, 
keywords={software prototyping;software quality;agile information system development methods;agile methods;agile practices;organizational adoption motives;pragmatic tailoring;software development approach;software quality;Correlation;Information systems;Organizations;Planning;Project management;Software quality;Agile software development;method tailoring}, 
doi={10.1109/HICSS.2014.589}, 
month={Jan},}
@INPROCEEDINGS{6567413, 
author={Farid, W.M. and Mitropoulos, F.J.}, 
booktitle={Southeastcon, 2013 Proceedings of IEEE}, 
title={Visualization and scheduling of non-functional requirements for agile processes}, 
year={2013}, 
pages={1-8}, 
abstract={Agile software development and project management methodologies, such as Scrum and Extreme Programming, have become very popular in quickly delivering quality Functional Requirements (FRs). However, agile project management methodologies have not adequately captured planning and visualization activities for crosscutting concerns and non-functional requirements in agile practices. This research proposes a planning and visualization framework that would be used to schedule software non-functional requirements implementations while utilizing agile software development and project management agile techniques. The approach is validated through visual simulation and a case study. Results showed that utilizing a risk-driven agile planning approach that involve non-functional requirements resulted in shortening the project schedule by one to two months over a traditional “Highest-Business-Value-First” agile scheduling technique.}, 
keywords={data visualisation;planning;scheduling;software development management;software prototyping;agile project management methodology;agile software development;highest-business-value-first agile scheduling technique;nonfunctional requirement;planning activity;risk-driven agile planning approach;scheduling activity;scrum-and-extreme programming;visual simulation;visualization activity;Measurement;Project management;Schedules;Software;Visualization;NORMAP;NORMATIC;NORPLAN;NORVIEW;Scrum;agile nonfunctional requirements;agile project management;agile requirements scheduling}, 
doi={10.1109/SECON.2013.6567413}, 
ISSN={1091-0050}, 
month={April},}
@INPROCEEDINGS{6209176, 
author={Hayata, T. and Jianchao Han and Beheshti, M.}, 
booktitle={Information Technology: New Generations (ITNG), 2012 Ninth International Conference on}, 
title={Facilitating Agile Software Development with Lean Architecture in the DCI Paradigm}, 
year={2012}, 
pages={343-348}, 
abstract={Both agile software development and lean architecture have been studied in the software engineering field. Combining these two approaches has also been investigated. However, the existing research and practices only present the principles but fail to develop a framework of the software development for practitioners to follow. In this paper, a framework about how nai¨ve agile practices could be fulfilled by introducing "lean" practices under the DCI (Data-Context-Interaction) paradigm is proposed. Lean practice is an end-user-focused and value-centric system design. In the proposed framework, lean architecture is complementary to agile principles and disciplines and supports agile development. This paper is exploring the possibilities of how agile methods can restore its lost insights and possibly be reinforced by lean thinking. Meanwhile, it is also examined what lean can do "beyond" agile. A new lean approach to building domain architecture comes from Data-Context-Interaction (DCI) paradigm which facilitates to represent the domain architecture intuitively. DCI approach allows us to successfully decouple between domain and business-logic features and provides an approach for lean practitioners to design system architecture much closer to the real-world domain. It is claimed that the investment into lean and agile methodologies go hand in hand from organizational to technical aspects by tying up with lean concepts as the backbone for agile methods. How lean makes it right and how agile makes it fast with the DCI paradigm will be demonstrated with an example. The main contribution to the software development will be presented.}, 
keywords={software architecture;software prototyping;DCI paradigm;agile methodology;agile practice;agile principle;agile software development;business-logic feature;data-context-interaction paradigm;domain architecture;end-user-focused system design;lean architecture;lean methodology;lean practice;lean thinking;organizational aspect;software engineering field;system architecture;technical aspect;value-centric system design;Architecture;Business;Computer architecture;Context;Production;Programming;Software;Agile;Data-Context-Interaction (DCI);Lean;architectural design;domain architecture;software development}, 
doi={10.1109/ITNG.2012.157}, 
month={April},}
@INPROCEEDINGS{6511783, 
author={Ayed, H. and Vanderose, B. and Habra, N.}, 
booktitle={Quality of Information and Communications Technology (QUATIC), 2012 Eighth International Conference on the}, 
title={A Metamodel-Based Approach for Customizing and Assessing Agile Methods}, 
year={2012}, 
pages={66-74}, 
abstract={In today's dynamic market environments, producing high quality software rapidly and efficiently is crucial. In order to allow fast and reliable development processes, several agile methodologies have been designed and are now quite popular. Although existing agile methodologies are abundant, companies are increasingly interested in the construction of their own customized methods to fit their specific environment. In this paper, we investigate how agile methods can be constructed in-house to address specific software process needs. First, we examine a case study focusing on the tailoring of two agile methodologies, XP and Scrum. Then, we focus on the high-level scope of any agile method customization and investigate an approach based on the Situational Method Engineering (SME) paradigm that includes measurement concepts for constructing context specific agile methodologies. We also examine several existing metamodels proposed for use in SME. Finally, we introduce an agile metamodel designed to support the construction of agile methods and relying on measurements to provide guidance to agile methodologists during the construction phase and throughout the development process itself.}, 
keywords={software prototyping;software quality;SME paradigm;Scrum;XP;agile metamodel;agile method assessment;agile method customization;construction phase;context specific agile methodology;high quality software;measurement concepts;metamodel-based approach;situational method engineering paradigm;software process;Agile methods metamodeling;Measurement;Process tailoring;Quality Assessment Modeling;Situational Method Engineering (SME)}, 
doi={10.1109/QUATIC.2012.11}, 
month={Sept},}
@INPROCEEDINGS{4599461, 
author={Moore, E. and Spens, J.}, 
booktitle={Agile, 2008. AGILE '08. Conference}, 
title={Scaling Agile: Finding your Agile Tribe}, 
year={2008}, 
pages={121-124}, 
abstract={The ability of agile practices to scale to "large" software development efforts (more than three teams or 30 team members) has been widely debated in recent years. While a variety of inhibitors to scaling agile are frequently cited, this experience report describes how the primary challenge to scaling agile that we faced was finding the right people to build our agile tribe. The effective adoption of agile requires passionate, motivated individuals who accept change, think like a business owner, operate willingly outside team walls, and identify and drive program issues. Finding such a large number of people with these qualities is much more difficult than establishing methods to support communications, progress tracking, and other agile practices. We conclude by describing the attributes of the type of person that we believe will thrive in a large-scale agile shop.}, 
keywords={software development management;team working;agile practice;agile tribe;large-scale agile shop;software development;Application software;Europe;Inhibitors;Large-scale systems;Medical services;Programming;Project management;Service oriented architecture;Testing;USA Councils;culture large-scale agile recruiting}, 
doi={10.1109/Agile.2008.43}, 
month={Aug},}
@INPROCEEDINGS{4293631, 
author={Baker, S.W. and Thomas, J.C.}, 
booktitle={Agile Conference (AGILE), 2007}, 
title={Agile Principles as a Leadership Value System: How Agile Memes Survive and Thrive in a Corporate IT Culture}, 
year={2007}, 
pages={415-420}, 
abstract={What agile approaches are effective to introduce and sustain meaningful change in an IT organization? How can agile approaches be leveraged beyond project work? What processes are involved in introducing agile approaches into an organization, and how might a leader become more agile in adopting agile approaches? DTE Energy's Information Technology Services (ITS) organization continues to embrace and extend the agile mindset throughout its culture. Our organization first embraced agility eight years ago, and we continue to refine our agile methodologies as we deliver and support world-class business solutions. The more we apply agile methods to our project work, the more we find them to be of value to leadership as well as operational work. In this report we discuss our experiences applying agile methods outside of software development projects in a broader context of operational work and organizational leadership. We assert that agile principals and techniques associated with software development projects can be readily applied in other types of organizational work and in creating and sustaining an effective leadership culture.}, 
keywords={DP industry;project management;software development management;agile method;corporate IT culture;leadership value system;software development project;Business process re-engineering;Companies;Context-aware services;Energy management;History;Information technology;Iterative methods;Programming;Project management;Software engineering}, 
doi={10.1109/AGILE.2007.10}, 
month={Aug},}
@INPROCEEDINGS{6910397, 
author={Gren, L. and Torkar, R. and Feldt, R.}, 
booktitle={Agile Conference (AGILE), 2014}, 
title={Work Motivational Challenges Regarding the Interface between Agile Teams and a Non-Agile Surrounding Organization: A Case Study}, 
year={2014}, 
pages={11-15}, 
abstract={There are studies showing what happens if agile teams are introduced into a non-agile organization, e.g. Higher overhead costs and the necessity of an understanding of agile methods even outside the teams. This case study shows an example of work motivational aspects that might surface when an agile team exists in the middle of a more traditional structure. This case study was conducted at a car manufacturer in Sweden, consisting of an unstructured interview with the Scrum Master and a semi-structured focus group. The results show that the teams felt that the feedback from the surrounding organization was unsynchronized resulting in them not feeling appreciated when delivering their work. Moreover, they felt frustrated when working on non-agile teams after have been working on agile ones. This study concludes that there were work motivational affects of fitting an agile team into a non-agile surrounding organization, and therefore this might also be true for other organizations.}, 
keywords={software development management;software prototyping;team working;Scrum Master;Sweden;agile methods understanding;agile teams;nonagile surrounding organization;semi-structured focus group;work motivational aspects;work motivational challenges;Companies;Interviews;Project management;Software;Software engineering;Standards organizations;Agile Development Processes;Empirical Study;Large Organizations;Work Motivation}, 
doi={10.1109/AGILE.2014.13}, 
month={July},}
@INPROCEEDINGS{6005525, 
author={Power, K.}, 
booktitle={Agile Conference (AGILE), 2011}, 
title={The Agile Office: Experience Report from Cisco's Unified Communications Business Unit}, 
year={2011}, 
pages={201-208}, 
abstract={Similar to the way a Project Management Office (PMO) defines standards for project management within the organization, an Agile Office governs the organization's ongoing agile adoption and continuous improvement through agile practices and is responsible for the successful ongoing adoption of agile practices throughout the organization. Agile transition takes time, it is not a discrete event. When transitioning to agility it is important to put in place structures that will ensure that agile survives long after the initial transition period. This paper describes the experiences of Cisco's Unified Communications Business Unit in establishing an Agile Office. It describes the history behind establishing the Agile Office, the governance model, where it fits in the organization structure, engagement model, primary activities, challenges faced, and the stakeholders with whom it operates.}, 
keywords={professional communication;project management;software development management;Cisco;agile office;engagement model;project management office;unified communications business unit;Communities;Organizations;Planning;Portfolios;Standards organizations;Training;agile;agile office;change management;organization;scale;stakeholder;transition}, 
doi={10.1109/AGILE.2011.7}, 
month={Aug},}
@INPROCEEDINGS{4599479, 
author={Jakobsen, C.R. and Johnson, K.A.}, 
booktitle={Agile, 2008. AGILE '08. Conference}, 
title={Mature Agile with a Twist of CMMI}, 
year={2008}, 
pages={212-217}, 
abstract={Systematic is an agile company working at CMMI level 5, where the default way of working is based on Scrum and story based early testing development. Solid experiences in combining CMMI with Scrum and story based development, has shown that the mix provides strong synergies (Sutherland et al., 2007) and insights into what CMMI practices fit and amplify the execution of Scrum and story based early testing development. This paper presents specifically how agile methods like Scrum are successfully combined with CMMI. CMMI provides solid support for what disciplines to consider. When applied the disciplines create a focus on important aspects of agile methods that perhaps are not normally elaborated, for example how to ensure a proper quality of a product backlog or how to ensure a proper "production line" for the project. This guidance may not be needed for small agile projects, but as the agile movement continues to grow, and is used for larger and more complex projects, agile projects will need to address these issues related to increased size and complexity. The experiences from combining CMMI and Scrum have led Systematic to identify examples of explicit guidance from CMMI that help to execute normal Scrum activities even better. These activities can be implemented in the spirit of the agile manifesto and principles and by doing so agile methods can be augmented and matured to ensure that even larger and more complex projects in the future can and will benefit from agile - with a twist of CMMI.}, 
keywords={Capability Maturity Model;program testing;software development management;CMMI;Scrum;agile projects;mature agile;story based early testing development;Communication system software;Context;Mission critical systems;Production;Safety;Software engineering;Software systems;Software testing;Solids;System testing;CMMI;Lean;Scrum;story based development;test driven development}, 
doi={10.1109/Agile.2008.10}, 
month={Aug},}
@ARTICLE{1267742, 
author={Ross, A.}, 
journal={Manufacturing Engineer}, 
title={Creating agile supply chains}, 
year={2003}, 
volume={82}, 
number={6}, 
pages={18-21-}, 
abstract={An agile business needs an agile supply chain. Quick response to customer demand, the ability to customise and the need to provide multiple variants for profitable customer niches are all increasingly required by many companies. Yet as manufacturers inexorably move their sourcing of components and low value-added operations offshore, to lower cost countries, so their supply chains increase in both distance and complexity. Many companies are faced with the challenge of providing an agile response to customers and yet operating a lean operation across an extended global supply chain. This is a challenge that needs a solution beyond the abilities of simply judgement, the telephone and spreadsheets. Companies need to utilise the power of Internet-enabled software to provide visibility across their global supply chain and to help them optimise it. In particular the new generation of supply chain optimisation software offers companies the ability to gain visibility and optimisation across their supply chains, at significantly reduced ownership costs compared to earlier systems}, 
keywords={Internet <creating agile supply chains>;agile manufacturing <creating agile supply chains>;enterprise resource planning <creating agile supply chains>;lean production <creating agile supply chains>;relational databases <creating agile supply chains>;supply chain management <creating agile supply chains>;Internet-enabled software;agile business;agile response;agile supply chains;customer demand;customer niches;extended global supply chain;lean operation;ownership costs;supply chain optimisation software}, 
doi={10.1049/me:20030603}, 
ISSN={0956-9944}, 
month={Dec},}
@INPROCEEDINGS{6340199, 
author={Eunha Kim and Seokmoon Ryoo}, 
booktitle={Computer Software and Applications Conference (COMPSAC), 2012 IEEE 36th Annual}, 
title={Agile Adoption Story from NHN}, 
year={2012}, 
pages={476-481}, 
abstract={NHN has moved two hundred teams (including more than three thousand software developers, testers, designers, team leaders, project managers and project facilitators) from waterfall development to agile development for the last three years. We have focused on creating self-organizing teams, debt-free iterative development, transparency and automation. It took us about three years of incremental improvements to get to where we are now, and we are continuously trying to improve our organization. This paper will show you how to get started on your transition to agile development, with tips on how to move your team from waterfall to agile, insights into the benefits of agile as well as problems and issues you may experience. We will also cover agile project management, agile development tools, requirements in agile, and agile testing methods.}, 
keywords={program testing;project management;software development management;software prototyping;team working;NHN Corporation;agile development tools;agile project management;agile requirements;agile testing methods;automation;debt-free iterative development;self-organizing teams;transparency;waterfall development;Automation;Companies;NIST;Planning;Productivity;Software;Testing;Agile Practices;Automated Acceptance Testing;Continuous Integration;Scrum}, 
doi={10.1109/COMPSAC.2012.83}, 
ISSN={0730-3157}, 
month={July},}
@INPROCEEDINGS{6298091, 
author={Soundararajan, S. and Arthur, J.D. and Balci, O.}, 
booktitle={Agile Conference (AGILE), 2012}, 
title={A Methodology for Assessing Agile Software Development Methods}, 
year={2012}, 
pages={51-54}, 
abstract={Agile methods provide an organization or a team with the flexibility to adopt a selected subset of principles and practices based on their culture, their values, and the types of systems that they develop. More specifically, every organization or team implements a customized agile method, tailored to better accommodate its needs. However, the extent to which a customized method supports the organizational objectives, i.e. the `goodness' of that method, is questionable. Existing agile assessment approaches focus on comparative analyses, or are limited in scope and application. In this research, we propose a structured, systematic, and comprehensive approach to assessing the `goodness' of agile methods. We examine an agile method based on (1) its adequacy, (2) the capability of the organization to support the adopted principles and practices specified by the method, and (3) the method's effectiveness. We propose the Objectives, Principles and Practices (OPP) Framework to guide our assessment. The Framework identifies (1) objectives of the agile philosophy, (2) principles that support the objectives, (3) practices that are reflective of the principles, (4) linkages among the objectives, principles and practices, and (5) indicators for assessing the extent to which an organization supports the implementation and the effectiveness of that practice. In this paper, we discuss our solution approach, preliminary results, and future work.}, 
keywords={software prototyping;OPP framework;agile assessment approach;agile philosophy;agile software development method;customized agile method;objectives-principles-practices;organizational objective;team;Collaboration;Couplings;Object recognition;Organizations;Programming;Software;Technological innovation;Adequacy;Agile Assessment;Capability;Effectiveness;Indicators;Linkages among Objectives;Principles;and Practices}, 
doi={10.1109/Agile.2012.24}, 
month={Aug},}
@INPROCEEDINGS{7097336, 
author={Butt, S.M. and Onn, A. and Butt, M.M. and Inam, N.T. and Butt, S.M.}, 
booktitle={Multi-Topic Conference (INMIC), 2014 IEEE 17th International}, 
title={Incorporation of usability evaluation methods in agile software model}, 
year={2014}, 
pages={193-199}, 
abstract={Majority of agile projects currently involve interactive user interface designs, which can only be possible by following UCD in agile software model. But the integration of UCD is not clear in the current agile models. Both Agile models and UCD have iterative nature but agile models focus on coding and development of software; whereas, UCD focuses on user interface of the software. Similarly, both of them have testing features where the agile model involves automated tested code while UCD involves an expert or a user to test the user interface. In this paper, a new agile usability model is presented and tested in companies and are presented. Key results from these projects clearly shows: the proposed agile model incorporates usability evaluation methods, improve the relationship between usability experts to work with agile software experts; in addition, allows agile developers to incorporate the result from UCD into subsequent interactions.}, 
keywords={ergonomics;interactive systems;software prototyping;user centred design;user interfaces;UCD;agile software expert;agile software model;agile usability model;interactive user interface design;usability evaluation method;user centered design;Lead;Testing;Usability}, 
doi={10.1109/INMIC.2014.7097336}, 
month={Dec},}
@INPROCEEDINGS{6005494, 
author={Benton, M.C. and Radziwill, N.M.}, 
booktitle={Agile Conference (AGILE), 2011}, 
title={A Path for Exploring the Agile Organizing Framework in Technology Education}, 
year={2011}, 
pages={131-134}, 
abstract={When the Agile Organizing Framework (AOF) is examined through the lens of the social constructivist pedagogy, principles and practices that define an agile learning environment emerge. This paper presents a translation of the AOF to fit the context of instruction in higher education based on the social constructivist perspective, and is not limited to software engineering education. Additional research is needed to observe, test and validate each of the agile enablers and inhibitors in the classroom, and to determine which principles and practices best contribute to the achievement of learning objectives. Furthermore, we hypothesize that integrating elements of the agile learning environment into agile software development methodologies could enhance a team's ability to successfully synchronize exploitation (the continuous improvement of existing products and practices) with exploration (the identification and implementation of breakthrough innovations).}, 
keywords={computer science education;software development management;software prototyping;team working;agile learning environment;agile organizing framework;agile software development methodology;higher education;social constructivist pedagogy;social constructivist perspective;software engineering education;team ability enhancement;technology education;Context;Education;Inhibitors;Organizing;Programming;Software engineering;Synchronization;Agile Organizing Framework (AOF);agile;agile learning environment;ambidextrous;exploitation;exploration;higher education;software engineering education}, 
doi={10.1109/AGILE.2011.51}, 
month={Aug},}
@INPROCEEDINGS{6187425, 
author={Huang, P.M. and Darrin, A.G. and Knuth, A.A.}, 
booktitle={Aerospace Conference, 2012 IEEE}, 
title={Agile hardware and software system engineering for innovation}, 
year={2012}, 
pages={1-10}, 
abstract={Agile system engineering practices have matured for software projects while hardware system engineering continues to embrace classical development techniques. High technology projects require innovative solutions to meet the restrictions of cost and schedule and still deliver high performance critical systems. This paper addresses the application of the flexible style of agile systems engineering for dynamic, complex hardware and software projects. These projects can benefit from applying the principles of agile systems engineering as has been demonstrated in the software realm. Fundamental to the rapid development is understanding the role of innovation and momentum in agile project management and systems engineering. For post industrial age projects that require non proven concepts, large degrees of uncertainty and ambiguity and extensive non-recurring engineering, agile systems engineering allows for project development with continuous change while addressing risk. Agile systems engineering exploits the role of momentum to allow innovation in the development process while allowing risk interactions to be managed in a disciplined manner. Examples of how these concepts were used on the design and development of two small satellites at The Johns Hopkins University Applied Physics Laboratory (JHU/APL) in the Multi-Mission Bus Demonstrator (MMBD) project. This challenging satellite build did not use existing key technology (heritage hardware) and created a large paradigm shift from traditional satellite development. Rapid design and development, a “momentum play”, was used to continuously allow change and assessment in a hardware adaptation of the SCRUM technique seen in Extreme Programming. The MMBD project demonstrates the adaptation of these agile concepts. By freezing late in the design cycle, the MMBD project was able to insert innovations throughout the program cycle. The ability to be innovative related to the speed with which the development p- ogressed, including working quickly through all technology choices. This paper discusses agile systems engineering as applied to both software and hardware. Short of papers on embedded systems using agile systems engineering, there are too few projects demonstrating these adaptations of techniques to complex, innovative hardware projects. The Multi-Mission Bus Demonstrator is an excellent benchmark example of program management of rapid technology maturity in a high technology application. This paper demonstrates how agile systems engineering techniques can be adapted to a high technology development program and shows how project momentum was critical to separate the constant non-recurring technology challenges to be worked rapidly from the engineering risk liens requiring longer time frames to retire.}, 
keywords={aerospace computing;project management;software engineering;systems engineering;MMBD project;agile hardware;agile project management;agile system engineering;high technology development program;innovation;multimission bus demonstrator;project momentum;satellite development;software system engineering;Educational institutions;Hardware;NASA;Satellite broadcasting;Satellites;Space vehicles;Systems engineering and theory}, 
doi={10.1109/AERO.2012.6187425}, 
ISSN={1095-323X}, 
month={March},}
@INPROCEEDINGS{6596295, 
author={Duka, D.}, 
booktitle={Information Communication Technology Electronics Microelectronics (MIPRO), 2013 36th International Convention on}, 
title={Adoption of agile methodology in software development}, 
year={2013}, 
pages={426-430}, 
abstract={As adopting Agile software development becomes a trend, there is a need for a more structured definition of what is Agile and what is a high-level of Agile maturity. Traditional development methodologies rely on documents to record and pass on knowledge from one specialist to the next. Feedback cycles are, in many cases, too long or even nonexistent. Agile principles emphasize building working software that people can get hands on quickly, versus spending a lot of time writing specifications up front. Agile development focuses on cross-functional teams empowered to make decisions, versus big hierarchies and splitting by function. It also focuses on rapid iteration, with continuous customer input along the way. This paper deals with Agile methodology and scaling. The special highlight is put on people investigating their contribution in Agile approach success. Some reflections after using Agile in our own organization are also presented.}, 
keywords={decision making;feedback;software development management;software prototyping;team working;agile development;agile methodology adoption;agile principles;agile scaling;continuous customer input;cross-functional teams;decision making;development methodologies;feedback cycles;high-level agile maturity;software development;time writing specifications;Computer architecture;Documentation;Organizations;Planning;Software;Telecommunications}, 
month={May},}
@INPROCEEDINGS{6984105, 
author={Selleri Silva, F. and Santana Furtado Soares, F. and Lima Peres, A. and Monteiro de Azevedo, I. and Pereira Pinto, P. and Romero de Lemos Meira, S.}, 
booktitle={Quality of Information and Communications Technology (QUATIC), 2014 9th International Conference on the}, 
title={A Reference Model for Agile Quality Assurance: Combining Agile Methodologies and Maturity Models}, 
year={2014}, 
pages={139-144}, 
abstract={The area of Quality Assurance (QA) is a challenge for many software development organizations that want to implement maturity models level rating, like Capability Maturity Model Integration (CMMI), together with agile methodologies. This study aims to present AgileQA-RM, an Agile Quality Assurance Reference Model to help organizations in QA implementation. The model proposition considers results of a systematic literature review about CMMI and agile, and a case study about QA in an organization with CMMI and agile. The methodology for model evaluation started with a check of its process areas adherence with other maturity models and with agile practices and activities. A survey based on expert opinion was also performed. Five maturity levels and eighteen process areas compose AgileQA-RM. Each process area has mandatory purpose, expected results and informative work products. Initial model assessments indicates that it can contribute to help organizations assessing its current situation about agile QA practices and supporting quality improvement through adoption of agile QA practices.}, 
keywords={Capability Maturity Model;quality assurance;software prototyping;software quality;AgileQA-RM;CMMI;Capability Maturity Model Integration;QA implementation;agile QA practices;agile activities;agile methodologies;agile quality assurance reference model;maturity models level rating;model assessments;model evaluation;quality improvement;software development organizations;Capability maturity model;Organizations;Planning;Quality assurance;Software;Standards organizations;Training;CMMI;agile methodologies;maturity models;quality assurance}, 
doi={10.1109/QUATIC.2014.25}, 
month={Sept},}
@INPROCEEDINGS{6065151, 
author={Corbucci, H. and Goldman, A. and Katayama, E. and Kon, F. and Melo, C. and Santos, V.}, 
booktitle={Software Engineering (SBES), 2011 25th Brazilian Symposium on}, 
title={Genesis and Evolution of the Agile Movement in Brazil -- Perspective from Academia and Industry}, 
year={2011}, 
pages={98-107}, 
abstract={Agile software development methods have been increasingly adopted worldwide and became one of the mainstream software development approaches. Agile methods have also had an impact on software engineering education with universities adapting their courses to accommodate this new point of view of software development. Software engineering research has tried to evaluate the impact of agile methods in industrial projects and discover in which situations it is beneficial to apply such methods. However, there are still few studies focusing on the progress of the Agile Movement in Brazil.In this paper, we present an overview of the evolution of the Agile Movement in Brazil, outlining the history of its first advocates in academia and industry. We also describe existing educational initiatives and the impact of agile development on the national research and present a report on the agile state-of- the-practice in the Brazilian IT industry.}, 
keywords={DP industry;computer science education;research and development;software prototyping;Brazilian IT industry;agile movement;agile software development method;educational initiative;industrial project;national research;software engineering education;Conferences;Educational institutions;Industries;Programming;Software;Software engineering;Agile software development;Brazilian agile research and state-of-the-practice.;agile methods;agile movement in Brazil;educational initiatives}, 
doi={10.1109/SBES.2011.26}, 
month={Sept},}
@INPROCEEDINGS{6693225, 
author={Ayed, H. and Habra, N. and Vanderose, B.}, 
booktitle={Software Measurement and the 2013 Eighth International Conference on Software Process and Product Measurement (IWSM-MENSURA), 2013 Joint Conference of the 23rd International Workshop on}, 
title={AM-QuICk: A Measurement-Based Framework for Agile Methods Customisation}, 
year={2013}, 
pages={71-80}, 
abstract={Software development practitioners are increasingly interested in adopting agile methods and generally recommend customisation so that the adopted method can fit the organisational reality. Many studies from the literature report agile adoption and customisation experiences but most of them are hardly generalisable and few are metric-based. They therefore cannot provide quantitative evidence of the suitability of the customised agile method, neither assess the organisation readability to adopt it, nor help in decision-making concerning the organisation transformation strategy. In this paper, we first describe the Agile Methods Quality-Integrated Customisation framework (AM-QuICk) that relies on measurements and aims to continuously assist agile methodologists throughout the agile adoption and customisation process, i.e., during the initial organisation adoption, the method design and throughout the working development process. Then, we present a case study using AM-QuICk within an organisation. With this study, we aim to analyse the current development process and its level of agility and identify the initial risk factors. The data were collected using preliminary interviews with the different team members and two questionnaires. The results reveal that though most respondents are enthusiastic towards agile principles, a progressive transformation strategy would be beneficial.}, 
keywords={risk management;software development management;software metrics;software process improvement;software prototyping;software quality;AM-QuICk;agile adoption;agile methods customisation;agile methods quality-integrated customisation framework;agile principles;customisation experiences;measurement-based framework;organisation adoption;organisation readability;organisation transformation strategy;organisational reality;quality assessment modelling;risk factors;software development practitioners;software process improvement;Adaptation models;Context;Object oriented modeling;Quality assessment;Software;Software measurement;Agile Process Assessment;Agile Software Development;Quality Assessment Modelling;Situational Method Engineering (SME);Software Process Improvement (SPI)}, 
doi={10.1109/IWSM-Mensura.2013.21}, 
month={Oct},}
@INPROCEEDINGS{6612875, 
author={Soundararajan, S. and Balci, O. and Arthur, J.D.}, 
booktitle={Agile Conference (AGILE), 2013}, 
title={Assessing an Organization's Capability to Effectively Implement Its Selected Agile Method(s): An Objectives, Principles, Strategies Approach}, 
year={2013}, 
pages={22-31}, 
abstract={Agile methods provide an organization or a team with the flexibility to adopt a selected subset of principles and practices based on their culture, their values, and the types of systems that they develop. More specifically, every organization or team implements a customized agile method, tailored to better accommodate its needs. However, the extent to which a customized method supports the organizational objectives, i.e. the 'goodness' of that method, should be demonstrable. Existing agile assessment approaches focus on comparative analyses, or are limited in scope and application. In this research, we present a systematic, comprehensive approach to assessing the 'goodness' of agile methods. We examine an agile method based on (1) its adequacy, (2) the capability of the organization to support the adopted principles and practices specified by the method, and (3) the method's effectiveness. We employ the Objectives, Principles and Strategies (OPS) Framework to guide our assessment process. The Framework (a) specifies objectives of the agile philosophy, (b) identifies principles that support the objectives, (c) designates strategies that implement the principles, (d) defines linkages that relate objectives to principles, and principles to strategies, and (e) prescribes indicators for assessing the extent to which an organization supports the implementation and effectiveness of those strategies. The propagation of indicator values along the linkages provides a multi-level assessment view of the agile method. In this paper, we discuss our assessment approach and substantiation results.}, 
keywords={organisational aspects;software development management;software prototyping;OPS framework;adequacy;agile assessment;agile philosophy objectives;customized agile method;indicator values;method effectiveness;multilevel assessment view;objectives-principles-and-strategies;organizational objectives;Capability maturity model;Couplings;Documentation;Measurement;Object recognition;Organizations;Software;Adequacy;Agile Assessment;Capability;Effectiveness;Indicators;Linkages among Objectives;Principles;and Strategies}, 
doi={10.1109/AGILE.2013.9}, 
month={Aug},}
@INPROCEEDINGS{4593718, 
author={Jinlong Su and Zhonghui Ouyang and Yimin Chen}, 
booktitle={Intelligent Control and Automation, 2008. WCICA 2008. 7th World Congress on}, 
title={The design of Agile Infrastructure for Manufacturing System in Garment Industry}, 
year={2008}, 
pages={4895-4900}, 
abstract={The Agile Manufacturing and Agile Supply Chain Management can input the vigor into Manufacturing Industry, i.e. Garments Industry, and help to increase its ability for the good return, can promote the level of technology and management of the industry from a labor intensive industry, and can move it toward the accurate and agile management. But before that, you have to be an Agile Manufacturing Enterprise. So it is very necessary to construct an Agile Infrastructure for Manufacturing System (AIMS), which can help its members changing to be an Agile Enterprise, a platform that named Comprehensive Information Platform by our research team. In this paper, we discuss some of the details of Comprehensive Information Platform (CIP) including relationship of its Main Functions, structure of CIP, and Some Key Enabled Technology of Agile Infrastructure, such as, optimal strategy for produce planning Model and Cooperative Games in Two-Echelon Supply Chain. All technical details touched upon obtained satisfying performance in practically.}, 
keywords={agile manufacturing;clothing industry;supply chain management;agile infrastructure;agile infrastructure for manufacturing system;agile manufacturing enterprise;agile supply chain management;comprehensive information platform;cooperative games;garment industry;labor intensive industry;two-echelon supply chain;Agile manufacturing;Clothing industry;Companies;Databases;Information systems;Information technology;Intelligent control;Manufacturing industries;Manufacturing systems;Technology management;AIMS;CIP;GIP;IDS;Load Balace Scheduling}, 
doi={10.1109/WCICA.2008.4593718}, 
month={June},}
@INPROCEEDINGS{4389589, 
author={Su, J.L. and Zhonghui Ouyang and Yimin Chen}, 
booktitle={Intelligent Systems Design and Applications, 2007. ISDA 2007. Seventh International Conference on}, 
title={Design of Agile Infrastructure for Manufacturing System with FNN Based Web-Enabled Technology Solutions}, 
year={2007}, 
pages={79-83}, 
abstract={The Agile Manufacturing and Agile Supply Chain Management can input the vigor into Manufacturing Industry, i.e. Garments Industry, and help to increase its ability for the good return, can promote the level of technology and management of the industry fiom a labor intensive industry, and can move it toward the accurate and agile management. But before that, you have to be an Agile Manufacturing Enterprise. So it's very necessary to construct an Agile Infrastructure for Manufacturing System (AIMS), which can help its members changing to be an Agile Enterprise, a platform that named Comprehensive Information Platform by our research team. In this paper, we discuss some of the details of Comprehensive Information Platform (CIP) including relationship of its Main Functions, structure of CIP, and Some Key Enabled Technology of Agile Infrastructure, such as, Load Balance Scheduling Model and Intrusion Detection System (IDS) Model. All technical details touched upon obtained satisfying performance in practically.}, 
keywords={Internet;agile manufacturing;clothing industry;fuzzy neural nets;resource allocation;security of data;supply chain management;FNN based Web-enabled technology solutions;agile enterprise;agile infrastructure;agile manufacturing system;agile supply chain management;comprehensive information platform;fuzzy neural network;garment industry;intrusion detection system model;load balance scheduling model;manufacturing industry;Agile manufacturing;Collaboration;Companies;Databases;Fuzzy neural networks;Intrusion detection;Job shop scheduling;Manufacturing industries;Manufacturing systems;Supply chain management}, 
doi={10.1109/ISDA.2007.25}, 
month={Oct},}
@INPROCEEDINGS{6986020, 
author={Sutling, K. and Mansor, Z. and Widyarto, S. and Letchmunan, S. and Arshad, N.H.}, 
booktitle={Software Engineering Conference (MySEC), 2014 8th Malaysian}, 
title={Agile project manager behavior: The taxonomy}, 
year={2014}, 
pages={234-239}, 
abstract={The past few years have witnessed dynamic changes in the field of software project management. These provided evidence of the strength of agile methodologies as a strategy that can speed up the development of rhythms and growth of innovation. Managing a project involves a complexity of requirements and developmental processes. This provides challenges to the project manager as he is accountable for the failure of a completed project. As such he is required to tackle any problems by adopting agile methodology during the development process. In Malaysia there is little research done to examine the behavior of the agile project manager. This study aims to analyze the behavior when project managers adopt agile in managing the development projects. Moreover, a review of the relevant literature has helped in developing an understanding of the agile project manager's behavior as this is necessary for them to become more agile inside development projects. For that reason, this paper has identified seven behaviors that the manager needs to adopt during software development process. These include Leadership, Openness, Results Orientation, Ethics, Communication, Strategic and Creative and Innovative. This paper contributes to the relevant theory by developing taxonomy of the agile project manager's behavior. Practitioners can use this taxonomy as a sensitizing device that helps the manager to consider behavior that promotes success of their projects. This is important to ensure an increase productivity and profitability, which are the business strategies of software development projects.}, 
keywords={ethical aspects;human resource management;innovation management;project management;software development management;agile methodology;agile project manager behavior;communication behavior;creative and innovative behavior;ethics behavior;innovation growth;leadership behavior;openness behavior;results orientation behavior;software development process;software project management;strategic behavior;Agile software development;Collaboration;Ethics;Lead;Project management;Software;Taxonomy;agile behavior;agile methodologies;agile project manager;communication;creative;ethics;innovative;leadership;openness;result orientation;strategic}, 
doi={10.1109/MySec.2014.6986020}, 
month={Sept},}
@INPROCEEDINGS{6142849, 
author={Lynch, T.D. and Herold, M. and Bolinger, J. and Deshpande, S. and Bihari, T. and Ramanathan, J. and Ramnath, R.}, 
booktitle={Frontiers in Education Conference (FIE), 2011}, 
title={An agile boot camp: Using a LEGO #x00AE;-based active game to ground agile development principles}, 
year={2011}, 
pages={F1H-1-F1H-6}, 
abstract={Industry-practiced agile methods must become an integral part of a software engineering curriculum. It is essential that graduates of such programs seeking careers in industry understand and have positive attitudes toward agile principles. With this knowledge they can participate in agile teams and apply these methods with minimal additional training. However, learning these methods takes experience and practice, both of which are difficult to achieve in a direct manner within the constraints of an academic program. This paper presents a novel, immersive boot camp approach to learning agile software engineering concepts with LEGO® bricks as the medium. Students construct a physical product while inductively learning the basic principles of agile methods. The LEGO®-based approach allows for multiple iterations in an active learning environment. In each iteration, students inductively learn agile concepts through their experiences and mistakes. Subsequent iterations then ground these concepts, visibly leading to an effective process. We assessed this approach using a combination of quantitative and qualitative methods. Our assessment shows that the students demonstrated positive attitudes toward the boot-camp approach compared to lecture-based instruction. However, the agile boot camp did not have an effect on the students' recall on class tests when compared to their recall of concepts taught in lecture-based instruction.}, 
keywords={computer science education;software engineering;LEGO-based active game;academic program;active learning environment;agile boot camp;ground agile development principles;industry-practiced agile methods;lecture-based instruction;multiple iterations;qualitative methods;quantitative methods;software engineering curriculum;Business;Cities and towns;Conferences;Education;Industries;Programming;Software engineering;Active learning;Agile concepts;Software engineering education;Workshops}, 
doi={10.1109/FIE.2011.6142849}, 
ISSN={0190-5848}, 
month={Oct},}
@INPROCEEDINGS{6223022, 
author={Hadar, I. and Sherman, S.}, 
booktitle={Cooperative and Human Aspects of Software Engineering (CHASE), 2012 5th International Workshop on}, 
title={Agile vs. plan-driven perceptions of software architecture}, 
year={2012}, 
pages={50-55}, 
abstract={The use of agile methodologies in industry has increased significantly over the past decade, promoting the value of human-centric software development process. This growing use derives the need to adjust agile methodologies to bigger, more complex system development projects, where architecture plays a significant role. However, many believe that an essential conflict exists between the requirement of minimalism in agile methods and the need for well-defined and documented architecture in complex systems. This paper presents an exploratory study aimed at understanding the software architecture related activities as perceived by architects with and without experience in agile methodologies. The findings indicate that while architects practicing only plan-driven methodologies perceive architecture activities as being related only to the first phases of the development process, architects involved in agile projects perceive architecture activities to be related to most or all phases of the development lifecycle. The latter perceptions are consistent with suggestions expressed in the literature regarding architecture in general and in agile methodologies in particular. Based on these findings we suggest that agile methods not only lead architects to adjust their behavior to the agile philosophy, but also improve architects' perceptions and practice of architecture in general.}, 
keywords={software architecture;software prototyping;agile methodologies;agile philosophy;agile projects perceive architecture activities;complex system development projects;human-centric software development process;plan-driven perceptions;software architecture;Computer architecture;Conferences;Documentation;Programming;Software;Software architecture;Testing;agile methodology;development methodologies;qualitative research;software architecture}, 
doi={10.1109/CHASE.2012.6223022}, 
month={June},}
@INPROCEEDINGS{6005486, 
author={Melo, C. and Cruzes, D.S. and Kon, F. and Conradi, R.}, 
booktitle={Agile Conference (AGILE), 2011}, 
title={Agile Team Perceptions of Productivity Factors}, 
year={2011}, 
pages={57-66}, 
abstract={In this paper, we investigate agile team perceptions of factors impacting their productivity. Within this overall goal, we also investigate which productivity concept was adopted by the agile teams studied. We here conducted two case studies in the industry and analyzed data from two projects that we followed for six months. From the perspective of agile team members, the three most perceived factors impacting on their productivity were appropriate team composition and allocation, external dependencies, and staff turnover. Teams also mentioned pair programming and collocation as agile practices that impact productivity. As a secondary finding, most team members did not share the same understanding of the concept of productivity. While some known factors still impact agile team productivity, new factors emerged from the interviews as potential productivity factors impacting agile teams.}, 
keywords={productivity;software development management;software prototyping;team working;agile team member;agile team perception;agile team productivity;pair programming;potential productivity factor;productivity factor;staff turnover;team composition;Companies;Interviews;Personnel;Productivity;Programming;Resource management;Software;agile methods;empirical analysis;productivity factors;team productivity}, 
doi={10.1109/AGILE.2011.35}, 
month={Aug},}
@INPROCEEDINGS{5261066, 
author={Abernathy, P.}, 
booktitle={Agile Conference, 2009. AGILE '09.}, 
title={Hook, Line and Sinker: The Role of Line Management in Relation to Agile Teams}, 
year={2009}, 
pages={314-319}, 
abstract={If agile is to be successfully introduced on a medium or large scale into any organization it is vital that there is a symbiotic relationship between line management and the agile teams that carry out the work. Line management form the organizational hierarchies and silos in any major corporation and their interaction with the cross functional Agile teams, either permanent or temporary, that are formed by drawing resources from various organizational silos, is a key success factor on the agile journey. This experience report outlines the dysfunctions that initially appeared between line management and the Agile teams early on in the agile journey and the steps taken to help overcome them. It outlines the key steps taken to enable the change and the benefits that accrued from this journey.}, 
keywords={business data processing;organisational aspects;agile journey;cross functional agile teams;line management;organizational hierarchies;Australia;Banking;Conference management;Insurance;Large-scale systems;Management training;Personnel;Project management;Software development management;Testing;agile teams;enterprise;governance;leadership;line management;scaling agile}, 
doi={10.1109/AGILE.2009.43}, 
month={Aug},}
@INPROCEEDINGS{5958156, 
author={Lehman, T.J. and Sharma, A.}, 
booktitle={SRII Global Conference (SRII), 2011 Annual}, 
title={Software Development as a Service: Agile Experiences}, 
year={2011}, 
pages={749-758}, 
abstract={At the IBM Almaden Research Center, we have been working with other divisions of IBM, offering Software Development as a Service (SDaaS). We work with our colleagues to understand their business and pain points, and then leverage that knowledge to build an application that at least meets, but ideally exceeds their needs. In our experience, applications built in the mode of Software Development as a Service have the following characteristics. There is a single client that owns the program requirements, the requirements are not fully formed, and, the software is at least partly, if not completely, custom. With many decades of software development experience in our group, we have used many different techniques for conducting software projects. In SDaaS, the style of interaction between the client team and the development team is a natural fit for Agile Software Development methods. Although our conditions do not fit the ideal Agile Software Development project profile, we have consistently experienced significant gains from taking the approach of iterative and incremental development. We have used the Waterfall, or plan-based, method many times for past projects, and we have consistently paid a significant price for the "Big Design Up Front" problems that go with that type of schedule. Although agile methods have consistently outperformed other methods in the early stages of a project, they do less well as the application program grows and the project matures. Once an application is in production and has an established user base, the emphasis of the client and development teams change from fast, easy and elegant feature additions to stability, release planning and maintenance. The imposition of a fixed schedule naturally transitions the overall project management into a plan-based model. However, we came to realize that agile methods still play an essential role, even when the overall project has matured to a steady state and is managed in a plan-based fashion. When de- - veloping a new program requirement, unless it is completely understood (i.e. all aspects and expected results documented), then it must go through an agile prototyping phase in order for it to be properly developed and scheduled. That agile prototyping phase is still bound inside a plan-based schedule, but that leaves room for iteration and innovation that we would not otherwise have in a fixed schedule. In this paper, we examine the various forces that influence both the client and development organizations that are engaged in Software Development as a Service. Using several projects from our past as examples, we show that the level of program technology and requirement understanding determines which development method will be more successful. Plan-based methods will work if all aspects of the project are known and there are minimal variables. Otherwise, our experience shows that an Agile Development model is likely to be the best choice for the beginning of a project. Once a project reaches steady state, with production releases, then a hybrid model works best, where agile methods are used to prototype new features, but bounded inside of a plan-based schedule.}, 
keywords={project management;software development management;software prototyping;IBM Almaden research center;agile experiences;agile prototyping phase;agile software development methods;big design up front problems;plan based model;project management;software development as a service;software projects;Pricing;Production;Programming;Prototypes;Schedules;Software;Agile Development;Hybrid Development;Plan-based Development}, 
doi={10.1109/SRII.2011.82}, 
month={March},}
@INPROCEEDINGS{5615620, 
author={Breivold, H.P. and Sundmark, Daniel and Wallin, P. and Larsson, S.}, 
booktitle={Software Engineering Advances (ICSEA), 2010 Fifth International Conference on}, 
title={What Does Research Say about Agile and Architecture?}, 
year={2010}, 
pages={32-37}, 
abstract={Agile has been used to refer to a software development paradigm that emphasizes rapid and flexible development. In the meanwhile, we have through our practical experiences in scaling up agile methods, noticed that architecture plays an important role. Due to the inter-relationship between agile methods and architecture, as well as divergent perceptions on their correlation stated in numerous sources, we are motivated to find out how these perceptions are supported by findings in the research community in general and in empirical studies in particular. To fully benefit from agile practices and architectural disciplines, we need empirical data on the perceived and experienced impacts of introducing agile methods to existing software development process, as well as correlations between agile and architecture. In this paper, we survey the research literature for statements made regarding the relationship between agile development and software architecture. The main findings are that there is a lack of scientific support for many of the claims that are concerned with agile and architecture, and more empirical studies are needed to fully reveal the benefits and drawbacks implied by an agile software development method.}, 
keywords={software architecture;software prototyping;agile development;flexible development;rapid development;software architecture;software development;Computer architecture;Conferences;Data mining;Programming;Software;Software architecture;Agile;Agile methodology;Architecture}, 
doi={10.1109/ICSEA.2010.12}, 
month={Aug},}
@INPROCEEDINGS{4293594, 
author={Tengshe, A. and Noble, S.}, 
booktitle={Agile Conference (AGILE), 2007}, 
title={Establishing the Agile PMO: Managing variability across Projects and Portfolios}, 
year={2007}, 
pages={188-193}, 
abstract={Our portfolio management office helps to balance the demand on the firm's resources from multiple competing and sometimes inter-dependent projects. Traditional project/portfolio management office supports the project/portfolio managers. As more and more of our project managers become scrum masters and the portfolio managers becomes the group scrum master, our portfolio management office needed to become agile itself. We converted our traditional PMO that supported the project managers to an agile PMO that staffed experienced agile coaches who supported the different portfolio and agile project teams. The services included conducting agile training, starting up new agile teams, encouraging team empowerment, transforming existing roles, artifacts and processes to become more agile, capturing metrics across portfolio and project teams and creating the management reports. We are sharing the lessons learned and hopeful that it will benefit those starting on the Agile adoption journey.}, 
keywords={financial data processing;software development management;agile PMO;agile training;interdependent projects;portfolio management office;scrum masters;team empowerment;traditional project;Ash;Atmosphere;Collaboration;Finance;Financial management;Management training;Portfolios;Project management;Resource management;Time to market}, 
doi={10.1109/AGILE.2007.24}, 
month={Aug},}
@INPROCEEDINGS{7164732, 
author={Agrawal, A. and Singh, S. and Maurya, L.S.}, 
booktitle={Computer Engineering and Applications (ICACEA), 2015 International Conference on Advances in}, 
title={A study on the growth of Agile methods in India till 2014}, 
year={2015}, 
pages={370-374}, 
abstract={In the last decades, we had sequential and phased software development models like the Waterfall model, Spiral model, etc., now today we have more iterative and incremental methods in form of Agile methods. The journey of Agile methods has come across a long way in world's software community after their development in the year 2001. These methods have been given a new edge to the software development and new dimensions of software products. Agile methods are now almost at peak because of their use not only in the field of software development, but also in every other field. World's CMM level 5 companies are using Agile methods and some are now coming forward to adopt agile methods and principles. But in India these methods are still a big word for some large as well as small companies. This paper is an attempt to trace out the current status and growth of agile methods in India from 2001 to 2014 and of happenings in social media about Agile methods.}, 
keywords={software prototyping;India;agile methods;incremental methods;iterative methods;sequential software development models;social media;software community;software products;spiral model;waterfall model;Communities;Companies;Computers;Scrum (Software development);Software;Agile;Agile Conferences;Agile Growth;Agile People}, 
doi={10.1109/ICACEA.2015.7164732}, 
month={March},}
@INPROCEEDINGS{6170012, 
author={Bhasin, S.}, 
booktitle={AGILE India (AGILE INDIA), 2012}, 
title={Quality Assurance in Agile: A Study towards Achieving Excellence}, 
year={2012}, 
pages={64-67}, 
abstract={Agile Methods are known to have built-in quality management system, however there are still challenges seen in the real life scenarios within the software organizations that are transitioning from traditional method to Agile development methods. Traditional Quality Assurance techniques are reporting based and rely on heavy weight inspection methods whereas Agile Quality Assurance techniques are built-in daily activities by teams. Research proposal here aims to study various challenges faced in terms of assuring quality in Agile, what are the key drivers or indicators of Quality in agile and proposing the framework to evaluate what aspects of Agile improve the quality of the product in terms of bug rates, development time and costs. Through this study we aim to provide some suggestions to help organizations overcome obstacles expected in adopting the agile method as software development tool and ensuring quality.}, 
keywords={inspection;organisational aspects;quality assurance;software prototyping;software quality;agile development methods;agile quality assurance techniques;bug rates;costs;development time;inspection methods;product quality;quality management system;software development tool;software organizations;Customer satisfaction;Organizations;Programming;Quality assurance;Software quality;agile software development;quality assurance (QA);scrum}, 
doi={10.1109/AgileIndia.2012.18}, 
month={Feb},}
@INPROCEEDINGS{6170013, 
author={Asnawi, A.L. and Gravell, A.M. and Wills, G.B.}, 
booktitle={AGILE India (AGILE INDIA), 2012}, 
title={Factor Analysis: Investigating Important Aspects for Agile Adoption in Malaysia}, 
year={2012}, 
pages={60-63}, 
abstract={This paper focuses on identifying the important aspects of Agile adoption from software practitioners in Malaysia. We analyse 27 Agile adoption variables from a survey of early Agile users in Malaysia. Factor analysis is conducted to identify the clusters of the variables (or items) and how they are inter-related to produce factors. Most of the respondents are from software organisations in Kuala Lumpur and Selangor, in which most of the companies are located in Malaysia. The clusters of variables resulting from this analysis can serve as a reference to the practitioners planning to adopt the methodology. The top factors identified from this study are shown in terms of (i) developer involvement and organisation-related aspects, (ii) cultural and people related aspects and (iii) customer collaboration and the need for professional skills when using Agile methods. In addition, factor analysis discovered that practitioners disagreed about the importance of the technical aspects of Agile. While we believe that these findings are particularly important from the Malaysian perspective, however, they also help add to the body of evidence in the field of software engineering and software process particularly in terms of Agile methods adoption. Moreover, the study also can help adopters from the nearby geographical regions to understand and see the suitability of Agile methods for their organisations.}, 
keywords={cultural aspects;organisational aspects;software prototyping;Kuala Lumpur;Malaysia;Selangor;agile adoption;agile users;cultural aspects;customer collaboration;factor analysis;geographical regions;organisation related aspects;people related aspects;professional skills;software engineering;software organisations;software practitioners;software process;Collaboration;Eigenvalues and eigenfunctions;Loading;Programming;Software;Software engineering;Training;Agile methods;factor analysis;factor extraction;factor rotation;loadings;software process}, 
doi={10.1109/AgileIndia.2012.13}, 
month={Feb},}
@INPROCEEDINGS{6196989, 
author={Farid, W.M. and Mitropoulos, F.J.}, 
booktitle={Southeastcon, 2012 Proceedings of IEEE}, 
title={NORMATIC: A visual tool for modeling Non-Functional Requirements in agile processes}, 
year={2012}, 
pages={1-8}, 
abstract={There is consensus in the research community that agile software development methodologies, such as Scrum, are becoming more and more popular in delivering quality Functional Requirements (FRs). However, agile methodologies have not adequately modeled Non-Functional Requirements (NFRs) and their potential solutions (operationalizations) with FRs in early development phases-let alone having tools to support such initiatives. This research proposes NORMATIC, a Java-based simulation tool for modeling non-functional requirements for semi-automatic agile processes. NORMATIC is the semi-automatic tool that supports the more general Non-Functional Requirements Modeling for Agile Processes (NORMAP) Methodology. Early results show that the tool can potentially help agile software development teams in reasoning about and visually modeling NFRs as first-class artifacts early on during requirements gathering and analysis phases. The tool can also aid project managers and Scrum teams in user story estimate and risk calculations as well as risk-driven planning and visualization of the proposed plans.}, 
keywords={Java;software prototyping;software quality;Java-based simulation tool;NFR modelling;NORMAP Methodology;NORMATIC;Scrum teams;agile software development methodologies;first-class artifacts;nonfunctional requirement modeling;nonfunctional requirement modeling for agile process methodology;project managers;risk-driven planning;risk-driven visualization;semiautomatic agile processes;visual tool;Encryption;Measurement;Planning;Programming;Project management;Software;Visualization;Agile Choose Case;Agile Loose Case;Agile Requirements Modeling;Agile Use Case;NFRs;NORMAP Methodology;NORMATIC;Scrum}, 
doi={10.1109/SECon.2012.6196989}, 
ISSN={1091-0050}, 
month={March},}
@INPROCEEDINGS{4599462, 
author={Ryan, J.J. and Scudiere, R.}, 
booktitle={Agile, 2008. AGILE '08. Conference}, 
title={The Price of Agile Is Eternal Vigilance}, 
year={2008}, 
pages={125-128}, 
abstract={Youpsilare the executive sponsor of your divisionpsilas foray into agile development. It was successful with the first development team; you saw very good results with the second and third; by the fourth team you knew you had something really successful going on. Now you want to roll it out across the entire engineering organization. But therepsilas a problem: each of your teams approaches agile a little differently. Youpsilad like a consistent approach across the division for a number of reasons, but you donpsilat want to stifle the new culture of cooperation and coordination that agile has brought to the organization. You have four different teams doing agile successfully four different ways. How do you scale agile across the organization with a consistent approach that also supports The Manifesto? We successfully scaled agile across a large development organization using strong, and very active, executive sponsorship to complement agile team discipline; by laying out a set of clearly defined, non- negotiable conventions and regulations, practices and expectations; and by training ourselves to constantly and consistently enforce, and question, these conventions from within.}, 
keywords={software engineering;agile development;agile team discipline;engineering organization;Best practices;Books;Constitution;Engineering management;Feedback;Guidelines;Meeting planning;Security;agile discipline;enterprise;executive sponsor;scaling}, 
doi={10.1109/Agile.2008.38}, 
month={Aug},}
@INPROCEEDINGS{5261097, 
author={Mun-Wai Chung and Drummond, B.}, 
booktitle={Agile Conference, 2009. AGILE '09.}, 
title={Agile at Yahoo! From the Trenches}, 
year={2009}, 
pages={113-118}, 
abstract={Yahoo! is a great proving ground for Agile. Since the introduction of Agile methods and practices into the company over five years ago, many contests of the Agile process have played out across the expansive Yahoo! software development landscape. Throughout its history, the spirit of Agile has survived, often in surprising and unexpected ways. Whether being mandated from the executive-level or arising from self-motivated small teams, one theme is constant - Agile has embedded itself into the DNA of Yahoo!. And to the present day, Agile continues to emerge and re-emerge in many forms from the dedicated individuals who use the tools of Agile to create some of the most innovative user experiences on the Internet. This paper offers an informal retrospective of the relative successes and failures of enterprise Agile adoption at Yahoo! from the period 2004 to 2009.}, 
keywords={DP industry;software development management;software houses;Agile method;Agile process;Internet;Yahoo! software development landscape;self-motivated team;Cloud computing;Computer networks;Cultural differences;DNA;History;IP networks;Internet;Product development;Programming;Social network services}, 
doi={10.1109/AGILE.2009.41}, 
month={Aug},}
@INPROCEEDINGS{5530221, 
author={Xiong Guang-cai and Wang Zhi-feng and Zhang Xin-jia and Ji Guo-jun}, 
booktitle={Service Systems and Service Management (ICSSSM), 2010 7th International Conference on}, 
title={Research of agile supply chain management system based on Web Services}, 
year={2010}, 
pages={1-6}, 
abstract={The emerging of agile manufacturing and the formation of agile competition, which is based on dynamic alliance, demands a larger and more flexible supply chain, which is called agile supply chain. Agile supply chain should have a quick market response, a high degree of information sharing, a high degree of process integration and interoperability. Traditional distributed technologies (CORBA/DCOM) can't meet dynamic, intelligent, automated requirement in the agile supply chain construction. In this paper, Web Services technology is used to build agile supply chain. Through the use of key technologies (XML, SOAP, UDDI, WSDL, WSFL) of Web Services, the integration framework of agile supply chain was proposed, and seamless integration of enterprise applications on heterogeneous platforms was realized. Therefore the intelligent business process was achieved.}, 
keywords={Web services;agile manufacturing;business data processing;open systems;production engineering computing;supply chain management;CORBA-DCOM distributed technology;Web services;agile manufacturing;agile supply chain management system;intelligent business process;interoperability;Agile manufacturing;Business;Ice;Information management;Marketing management;Simple object access protocol;Supply chain management;Supply chains;Web services;XML;SOAP;UDDI;WSDL;WSFL;Web Services;XML;agile supply chain;web service}, 
doi={10.1109/ICSSSM.2010.5530221}, 
month={June},}
@INPROCEEDINGS{6914093, 
author={Mohd Isa, W.A.R.W. and Mohd Lokman, A. and Syed Aris, S.R. and Abdul Aziz, M. and Taslim, J. and Manaf, M. and Sulaiman, R.}, 
booktitle={Information and Communication Technology (ICoICT), 2014 2nd International Conference on}, 
title={Engineering rural informatics using agile user centered design}, 
year={2014}, 
pages={367-372}, 
abstract={The aim of this study is to demonstrate the applicability of agile user centered design to engineer rural informatics for rural community. This is because rural communities have unique technological requirements and less is known on the understanding of how rural communities use technologies. Thus, a handicraft web-based system will be developed for Kampung Tengah, Melaka, Malaysia by using agile user centered design. Agile user centered design is commonly seen as the integration of User-Centered Design into agile methods. The Human Computer Interaction (HCI) technique and agile approach adapted are contextual inquiry and extreme programming method. Contextual inquiry through qualitative interviewing was conducted before the iteration processes. Subsequently, this web project development used agile approach with two iterations to assist in the extreme programming method. The results demonstrate the applicability of agile user-centered design to engineer rural informatics for rural community. Future work may involve including more HCI techniques and agile approaches together in the agile user centered design methodology to improve the usability and quality of the digital IT artifact.}, 
keywords={Internet;human computer interaction;public administration;social sciences computing;software prototyping;user centred design;HCI techniques;Kampung Tengah;Malaysia;Melaka;agile user centered design;contextual inquiry;digital IT artifact quality;digital IT artifact usability;extreme programming method;handicraft Web-based system;human computer interaction;rural community;rural informatics;Communities;Human computer interaction;Informatics;Interviews;Navigation;Programming;User centered design;Agile user centered design;human computer interaction;information and communication technologies for development (ICT4D);rural informatics;web systems engineering}, 
doi={10.1109/ICoICT.2014.6914093}, 
month={May},}
@INPROCEEDINGS{5261088, 
author={Rico, D.F. and Sayani, H.H.}, 
booktitle={Agile Conference, 2009. AGILE '09.}, 
title={Use of Agile Methods in Software Engineering Education}, 
year={2009}, 
pages={174-179}, 
abstract={The use of contemporary software development approaches such as agile methods is growing in widespread use throughout the world. Although some universities are starting to teach them, courses on agile methods at the undergraduate and graduate levels are still a new phenomenon. The University of Maryland University College (UMUC) adapted agile methods for its capstone course towards a masterpsilas degree in software engineering in the Fall of 2008. Three distributed teams of five students were asked to use agile methods to build competing electronic commerce Web sites. With little training in agile methods, virtual teams, collaboration tools, or Web design, each of the three teams completed fully functional e-commerce Web sites using agile methods in little more than 13 weeks. Teams who struck an optimum balance of customer collaboration, use of agile methods, and technical programming ability had better productivity and Web site quality.}, 
keywords={Web design;computer science education;educational courses;electronic commerce;software engineering;teaching;Web design;agile method;capstone course;collaboration tool;contemporary software development approach;electronic commerce Web site;software engineering education;teaching;virtual team;Computer industry;Dynamic programming;Educational institutions;Electronic commerce;Military computing;Programming profession;Service oriented architecture;Software engineering;Software standards;Testing;Agile Methods;Computer Programming;Education;Extreme Programming;Scrum;Software Development;Software Engineering}, 
doi={10.1109/AGILE.2009.13}, 
month={Aug},}
@INPROCEEDINGS{6298092, 
author={Hellmann, T.D. and Sharma, A. and Ferreira, J. and Maurer, F.}, 
booktitle={Agile Conference (AGILE), 2012}, 
title={Agile Testing: Past, Present, and Future -- Charting a Systematic Map of Testing in Agile Software Development}, 
year={2012}, 
pages={55-63}, 
abstract={Testing has been a cornerstone of agile software development methodologies since early in the history of the field. However, the terminology used to describe the field - as well as the evidence in existing literature - is largely inconsistent. In order to better structure our understanding of the field and to guide future work, we conducted a systematic mapping of agile testing. We investigated five research questions: which authors are most active in agile testing; what is agile testing used for; what types of paper tend to be published in this field; how do practitioners and academics contribute to research in this field; and what tools are used to conduct agile testing? Of particular interest is our investigation into the source of these publications, which indicates that academics and practitioners focus on different types of publication and, disturbingly, that the number of practitioner papers in the sources we searched is strongly down since 2010.}, 
keywords={program testing;agile software development;agile testing;systematic mapping;Collaboration;Databases;Encoding;Industries;Software;Systematics;Testing;agile software development;empirical;software testing;systematic mapping;test-driven development;testing tools}, 
doi={10.1109/Agile.2012.8}, 
month={Aug},}
@INPROCEEDINGS{4343753, 
author={Begel, A. and Nagappan, N.}, 
booktitle={Empirical Software Engineering and Measurement, 2007. ESEM 2007. First International Symposium on}, 
title={Usage and Perceptions of Agile Software Development in an Industrial Context: An Exploratory Study}, 
year={2007}, 
pages={255-264}, 
abstract={Agile development methodologies have been gaining acceptance in the mainstream software development community. While there are numerous studies of agile development in academic and educational settings, there has been little detailed reporting of the usage, penetration and success of agile methodologies in traditional, professional software development organizations. We report on the results of an empirical study conducted at Microsoft to learn about agile development and its perception by people in development, testing, and management. We found that one-third of the study respondents use agile methodologies to varying degrees, and most view it favorably due to improved communication between team members, quick releases and the increased flexibility of agile designs. The scrum variant of agile methodologies is by far the most popular at Microsoft. Our findings also indicate that developers are most worried about scaling agile to larger projects (greater than twenty members), attending too many meetings and the coordinating agile and non-agile teams.}, 
keywords={software development management;Scrum variant;agile software development;industrial context;Collaborative software;Computer industry;Gain measurement;Large-scale systems;Productivity;Programming;Software engineering;Software measurement;Testing;Variable speed drives}, 
doi={10.1109/ESEM.2007.12}, 
ISSN={1938-6451}, 
month={Sept},}
@INPROCEEDINGS{6868450, 
author={Butt, S.M. and Ahmad, W.F.W. and Rahim, L.}, 
booktitle={Computer and Information Sciences (ICCOINS), 2014 International Conference on}, 
title={Handling tradeoffs between agile and usability methods}, 
year={2014}, 
pages={1-6}, 
abstract={In the past few years, many organizations have tried to improve their software development methodology. Different development approaches had been introduced but only a few are still functioning in the software industry. Agile software development is one approach, which is currently successful in software industry. For the development of interactive and usable software, this agile approach needs to integrate with usability approaches. But this integration is not clear as both agile and usability follows iterative approach of development while agile approach is more toward on writing code and development of a running system; whereas, usability focused on the user interface to make the software more usable and increase its usability by following UCD process. This paper provides an extensive related work on the integration of agile methods with usability that highlights critical issues in agile methods and shows the importance of usability in agile methods. In the end, the proposed model is discussed to handle tradeoff between usability and agile methods under one model.}, 
keywords={iterative methods;software prototyping;UCD process;agile software development;iterative approach;software development methodology;software industry;software usability;Agile software development;Computers;Conferences;Testing;Usability;User interfaces;agile development;software engineering;usability;user interface design}, 
doi={10.1109/ICCOINS.2014.6868450}, 
month={June},}
@INPROCEEDINGS{4293573, 
author={Whitworth, E. and Biddle, R.}, 
booktitle={Agile Conference (AGILE), 2007}, 
title={The Social Nature of Agile Teams}, 
year={2007}, 
pages={26-36}, 
abstract={Agile methodologies represent a 'people' centered approach to delivering software. This paper investigates the social processes that contribute to their success. Qualitative grounded theory was used to explore socio-psychological experiences in agile teams, where agile teams were viewed as complex adaptive socio-technical systems. Advances in systems theory suggest that human agency changes the nature of a system and how it should be studied. In particular, end-goals and positive sources of motivation, such as pride, become important. Research included the questions: How do agile practices structure and mediate the experience of individuals developing software? And in particular, how do agile practices mediate the interaction between individuals and the team as a whole? Results support an understanding of how social identity and collective effort are supported by agile methods.}, 
keywords={software engineering;adaptive socio-technical systems;agile methodologies;agile teams;qualitative grounded theory;socio-psychological experience;software development;Adaptive systems;Agile manufacturing;Animation;Assembly;Humans;Lean production;Programming;Psychology;Sociotechnical systems;Software engineering}, 
doi={10.1109/AGILE.2007.60}, 
month={Aug},}
@INPROCEEDINGS{4340948, 
author={Zhe Zhang}, 
booktitle={Wireless Communications, Networking and Mobile Computing, 2007. WiCom 2007. International Conference on}, 
title={The Architecture of Multiagent-Based Agile Supply Chain}, 
year={2007}, 
pages={4782-4785}, 
abstract={Agile supply chain comes into being with the development of supply chain and agile manufacturing. It is an effective method to use multiagent technology to support agile supply chain management. Based on the analysis on the characteristic of agile supply chain and multiagent technology, and to achieve the goal of quick response and dynamic reconstruction, this paper presents the architecture of multiagent-based agile supply chain, and analyzes the construction and the operation mechanism of enterprise agents and coordination agent in detail. Furthermore, taking CORBA (Common Object Request Broker Architecture) as the distributed standard, this paper discusses the design and the development of agile supply chain system.}, 
keywords={agile manufacturing;distributed object management;multi-agent systems;production engineering computing;supply chain management;agile manufacturing;agile supply chain management;common object request broker architecture;multiagent technology;multiagent-based agile supply chain architecture;Agile manufacturing;Control systems;Electronic mail;IP networks;Multiagent systems;Standards development;Supply chain management;Supply chains;Technology management;Virtual enterprises}, 
doi={10.1109/WICOM.2007.1173}, 
month={Sept},}
@INPROCEEDINGS{4599486, 
author={Thomas, J.C. and Baker, S.W.}, 
booktitle={Agile, 2008. AGILE '08. Conference}, 
title={Establishing an Agile Portfolio to Align IT Investments with Business Needs}, 
year={2008}, 
pages={252-258}, 
abstract={Those who implement agile software development and agile project management in a traditional corporate environment may encounter legacy corporate and IT processes that reflect legacy mindsets and cultures. These remnant processes, mindsets, and cultures represent opportunities to improve the systemic value that agile approaches are capable of enabling. For example, in many large corporations the annual budgeting cycle drives a mindset that scope, budget, and schedule must be established up front, often many months before project work begins. Success means delivering on that scope within the budget and schedule commitments. In turn, this mindset of defining business investment opportunities upfront, coupled with a project mentality where work must be completed before the next budgeting cycle begins, drives "big batch" (waterfall-type) project approaches and supporting IT processes. As our IT teams successfully applied agile methods at the project level, we began to address our approach for managing portfolios of projects to increase the amount of value we deliver with our business partners. As we did this, we ran headlong into inherent conflicts between agile and legacy corporate processes and mindsets. We recognized the need to transform those legacy processes and mindsets so that we manage the portfolios of project investments in an agile manner. This paper describes the challenges we faced as we applied agile methods to IT investment funding, change management, and governance; the success and failures we experienced; what we learned; and how we adapted to improve.}, 
keywords={business data processing;investment;management of change;project management;software development management;IT investments;agile project management;agile software development;business needs;change management;corporate environment;legacy corporate;portfolio management;Business process re-engineering;Companies;Information technology;Investments;Portfolios;Programming;Project management;Radio access networks;Scheduling;Software engineering;change management;funding model;it governance;legacy mindset;portfolio management;project portfolio;theory of constraints}, 
doi={10.1109/Agile.2008.29}, 
month={Aug},}
@INPROCEEDINGS{4293575, 
author={Ferreira, J. and Noble, J. and Biddle, R.}, 
booktitle={Agile Conference (AGILE), 2007}, 
title={Agile Development Iterations and UI Design}, 
year={2007}, 
pages={50-58}, 
abstract={Many agile projects require user interaction (UI) design, but the integration of UI design into agile development is not well understood. This is because both agile development and UI design are iterative - but while agile methods iterate on code with iterations lasting weeks, UI designs typically iterate only on the user interface using low technology prototypes with iterations lasting hours or days. Similarly, both agile development and UI design emphasise testing, but agile development involves automated code testing, while UI must done by expert inspectors or ideally potential end users. We report on a qualitative grounded theory study of real agile projects involving significant UI design. The key results from our study are that agile iterations facilitates usability testing; allows software developers to incorporate results of those tests into subsequent iterations; and crucially, can significantly improve the quality of the relationship between UI designers and software developers.}, 
keywords={software engineering;user interfaces;agile development iteration;automated code testing;user interaction design;Automatic testing;Iterative methods;Process design;Prototypes;Software performance;Software prototyping;Software quality;Software testing;Usability;User interfaces}, 
doi={10.1109/AGILE.2007.8}, 
month={Aug},}
@INPROCEEDINGS{6005503, 
author={Azizyan, G. and Magarian, M.K. and Kajko-Matsson, M.}, 
booktitle={Agile Conference (AGILE), 2011}, 
title={Survey of Agile Tool Usage and Needs}, 
year={2011}, 
pages={29-38}, 
abstract={Today, little is known about what tools software companies are using to support their Agile methods and whether they are satisfied or dissatisfied with them. This is due to lack of objective surveys on the subject. The surveys that have been conducted so far are of a subjective nature and have mostly been performed by tool vendors. They are very limited in number and focus mainly on company structure and adherence to a specific Agile method rather than on tool usage and needs. For this reason, many companies have difficulties to choose appropriate tools to support their Agile process. One such company is the Swedish telecommunications giant Ericsson. To account for this lack of data, Ericsson commissioned us to conduct an independent survey focusing on the tool usage and needs as experienced by the Agile software community today. In this paper, we report on the results of our survey. The survey covers 121 responses from 120 different companies coming from 35 different countries. Our results show that the most satisfactory tool aspect is ease of use, whereas the least satisfactory one is lack of integration with other systems. Finally, our results provide a list of features that are most desired by the software companies today.}, 
keywords={DP industry;project management;software development management;software prototyping;Ericsson;Swedish telecommunications giant;agile method;agile process;agile software community;agile tool needs;agile tool usage;software companies;software company;Communities;Companies;Focusing;Planning;Project management;Software;Mingle;Rally;Scrum;Trac;Version One;XP;ease of use;flexinility;integration;physical wall;spreedsheets;taskboard}, 
doi={10.1109/AGILE.2011.30}, 
month={Aug},}
@ARTICLE{6007124, 
author={McHugh, O. and Conboy, K. and Lang, M.}, 
journal={Software, IEEE}, 
title={Agile Practices: The Impact on Trust in Software Project Teams}, 
year={2012}, 
volume={29}, 
number={3}, 
pages={71-76}, 
abstract={Agile software development involves self-managing teams that are empowered and responsible for meeting project goals in whatever way they deem suitable. Managers must place more trust in such teams than they do in teams following more traditional development methodologies. The authors highlight how the use of agile practices can enhance trust amongst agile team members. They also present challenges that agile teams can face as a result of using agile practices. Their results are based on the findings from three case studies of agile software development teams.}, 
keywords={project management;software management;software prototyping;team working;agile practice;agile software development;agile team member;self-managing team;software project team;trust impact;Business;Cultural differences;Delay;Interviews;Planning;Programming;Software;agile methodology;agile practice;culture;daily stand-up;distributed software engineering;planning;retrospective;trust}, 
doi={10.1109/MS.2011.118}, 
ISSN={0740-7459}, 
month={May},}
@INPROCEEDINGS{1667571, 
author={Hartmann, D. and Dymond, R.}, 
booktitle={Agile Conference, 2006}, 
title={Appropriate agile measurement: using metrics and diagnostics to deliver business value}, 
year={2006}, 
pages={6 pp.-134}, 
abstract={Agile software development continually measures both our product and the process used to create it, to allow improvement. With increased popularity, more risk-averse groups are being drawn to agile, bringing with them modes of evaluation incompatible with agile values and principles. These outmoded metrics drive dysfunctional behaviors which threaten the integrity of an emerging agile culture. This paper collects some of the current thinking on appropriate agile metrics, and proposes simple tools for use by teams or organizations. The intention of these tools is to foster dialogue about the appropriateness of metrics in a given context, and thereby to encourage measurements more congruent with the objectives of agile teamwork}, 
keywords={software development management;software metrics;team working;agile measurement;agile metrics;agile software development;agile teamwork;business value;Aggregates;Monitoring;Navigation;Programming;Shape measurement;Software development management;Software measurement;Teamwork;Testing}, 
doi={10.1109/AGILE.2006.17}, 
month={July},}
@INPROCEEDINGS{6606635, 
author={Fitzgerald, B. and Stol, K.-J. and O'Sullivan, R. and O'Brien, D.}, 
booktitle={Software Engineering (ICSE), 2013 35th International Conference on}, 
title={Scaling agile methods to regulated environments: An industry case study}, 
year={2013}, 
pages={863-872}, 
abstract={Agile development methods are growing in popularity with a recent survey reporting that more than 80% of organizations now following an agile approach. Agile methods were seen initially as best suited to small, co-located teams developing non-critical systems. The first two constraining characteristics (small and co-located teams) have been addressed as research has emerged describing successful agile adoption involving large teams and distributed contexts. However, the applicability of agile methods for developing safety-critical systems in regulated environments has not yet been demonstrated unequivocally, and very little rigorous research exists in this area. Some of the essential characteristics of agile approaches appear to be incompatible with the constraints imposed by regulated environments. In this study we identify these tension points and illustrate through a detailed case study how an agile approach was implemented successfully in a regulated environment. Among the interesting concepts to emerge from the research are the notions of continuous compliance and living traceability.}, 
keywords={program diagnostics;safety-critical software;software prototyping;agile adoption;agile approach;agile development method;colocated teams;continuous compliance;distributed teams;living traceability;regulated environment;safety-critical system;Documentation;Organizations;Product development;Quality management;Safety;Software;Standards;Agile methods;Scrum;case study;regulated environments}, 
doi={10.1109/ICSE.2013.6606635}, 
month={May},}
@INPROCEEDINGS{4599452, 
author={Ghanam, Y. and Xin Wang and Maurer, F.}, 
booktitle={Agile, 2008. AGILE '08. Conference}, 
title={Utilizing Digital Tabletops in Collocated Agile Planning Meetings}, 
year={2008}, 
pages={51-62}, 
abstract={In agile software development, planning meetings play a pivotal role in establishing a concrete under-standing of customerspsila requirements. Using tools to enhance the effectiveness of the planning meetings without affecting the agility of the practices or disturbing the traditional settings is a challenging task. In this paper, we propose the use of digital tabletops as a means of collaboration in agile planning meetings for collocated teams. To support this proposal, we introduce Agile Planner for Digital Tabletops, a planning tool that was specifically designed for use on large horizontal displays. A multipart study involving a variety of qualitative methodologies was conducted to evaluate this approach. The study involved 14 individual participants plus a five member agile team. The individual evaluation suggested that in general, the tool is usable with minor issues to be considered in future design revisions. The agile team evaluation revealed a significant interest in the tool and its added benefits to the agility of the planning meeting with some issues to be further enhanced.}, 
keywords={groupware;microcomputers;software engineering;agile planning;agile software development;collocated agile planning;digital tabletops;horizontal displays;Collaboration;Collaborative software;Concrete;Displays;Keyboards;Laboratories;Meeting planning;Mice;Programming;Proposals;Agile;collocated;meeting;planning;tabletop}, 
doi={10.1109/Agile.2008.13}, 
month={Aug},}
@INPROCEEDINGS{6861054, 
author={Bakalova, Z. and Daneva, M. and Tuan Nguyen}, 
booktitle={Research Challenges in Information Science (RCIS), 2014 IEEE Eighth International Conference on}, 
title={Standards compliance helps value creation in agile projects}, 
year={2014}, 
pages={1-6}, 
abstract={Compliance with standards or levels in maturity models and agile approaches are two radically different ways to address and achieve software quality. There is a mixed understanding of the possibility for their co-existence within an organization. Outside of the dogmatic debate regarding their co-existence, however, voices have been raised recently to recognize that both approaches have their merits, and perhaps, can be combined. This paper presents the results of an interview-based exploratory case study on the practices that an agile-by-design organization has put in place in order to profit from the opportunities that compliance to a quality standard can offer in respect to value creation for clients. Our conclusions are (i) that being compliant with a standard helps an agile company achieve client satisfaction, improved product quality and waste reduction; and (ii) that standards compliance does not necessarily impose significant changes on the agile process of an organization. Implication for practice is twofold: our results indicate (1) that agile organizations should strive for becoming more mature as this brings additional benefits, and (2) that for organizations to get standards-compliant there is a need of guidelines to direct them in complementing their agile processes with standards-compliant practices.}, 
keywords={software prototyping;software quality;standards;agile approach;agile projects;agile-by-design organization;maturity models;quality standard;software quality;standards-compliant practices;value creation;Synthetic aperture sonar;agile project management;agile software engineering;empirical research method;exploratory case study;standards compliance}, 
doi={10.1109/RCIS.2014.6861054}, 
month={May},}
@INPROCEEDINGS{7155964, 
author={Kaur, K. and Jajoo, A. and Manisha}, 
booktitle={Computing Communication Control and Automation (ICCUBEA), 2015 International Conference on}, 
title={Applying Agile Methodologies in Industry Projects: Benefits and Challenges}, 
year={2015}, 
pages={832-836}, 
abstract={Agile software development has been prevalent in IT industry since more than two decades now. Conceptually, Agile was introduced as an iterative, incremental and adaptive methodology for software development. There are quite a few studies that discuss the success of agile development projects on account of multiple factors like cost, time, quality and productivity. Owing to its popular virtues like enhanced flexibility to incorporate evolving requirements, incremental delivery, quick time to market and ability to keep pace with market trends [1], clients tend to leverage agile methods for a variety of project types in addition to typical small scale development projects. Through this paper, we discuss some of the practical aspects, pros and cons of applying agile principles to different types of IT projects including testing projects, maintenance projects and large-scale development projects.}, 
keywords={project management;software development management;software prototyping;agile development projects;agile methodologies;agile principles;agile software development;industry projects;information technology;large-scale development projects;maintenance projects;testing projects;Agile software development;Automation;Maintenance engineering;Planning;Portals;Software;Testing;Agile;implementation;large scale development;maintenance;projects;testing}, 
doi={10.1109/ICCUBEA.2015.166}, 
month={Feb},}
@INPROCEEDINGS{6910400, 
author={Md Rejab, M. and Noble, J. and Allan, G.}, 
booktitle={Agile Conference (AGILE), 2014}, 
title={Distributing Expertise in Agile Software Development Projects}, 
year={2014}, 
pages={33-36}, 
abstract={The distribution of expertise in Agile teams is vital to enable team knowledge to be shared, preserved, and accessed when it is needed. Most studies emphasize knowledge sharing but a few empirical studies focus on skills. Integrating knowledge and skills is vital to leverage expertise in Agile teams. Moreover, it is not easy to leverage expertise by distributing expertise in Agile teams. Through a Grounded Theory study involving 18 Agile practitioners based in New Zealand and Australia, we revealed five approaches to distributing expertise in Agile teams: embracing a master-apprentice model, coaching and mentoring, engaging hands-on learning, establishing discussion platforms and disseminating explicit knowledge. Distributing expertise will provide insight into how Agile team members disseminate available expertise and pull new expertise into Agile teams.}, 
keywords={employee welfare;software prototyping;Australia;New Zealand;agile software development projects;distributing expertise;grounded theory study;master-apprentice model;Electronic publishing;Employee welfare;Information services;Internet;Scrum (Software development);Software;Agile Teams;Distributing Expertise;Grounded Theory}, 
doi={10.1109/AGILE.2014.16}, 
month={July},}
@INPROCEEDINGS{6671304, 
author={Duran, K. and Burns, G. and Snell, P.}, 
booktitle={Reverse Engineering (WCRE), 2013 20th Working Conference on}, 
title={Lehman's laws in agile and non-agile projects}, 
year={2013}, 
pages={292-300}, 
abstract={Software team leaders and managers must make decisions on what type of process model they will use for their projects. Recent work suggests the use of agile processes since they promote shorter development cycles, better collaboration, and process flexibility. Due to the many benefits of agile processes, many software organizations have shifted to using more agile process methodologies. However, there is limited research that studies how agile processes affects the evolution of a software system over time. In this paper, we perform an empirical study to better understand the effects of using agile processes. We compare two open source projects, one of which uses a tailored agile process (i.e., Xtreme Programming) and another that has no formal process methodology. In particular, we compare the two projects within the context of Lehmans Laws for continuing growth, continuing change, increasing complexity, and conservation of familiarity. Our findings show that all four of the laws held true for the project that uses an agile process and that there are noticeable differences in the evolution of the two projects, many of which can be traced back to specific practices used by the agile team.}, 
keywords={decision making;project management;public domain software;software development management;software prototyping;team working;Lehman laws;Xtreme Programming;agile process;agile team;collaboration;continuing change;continuing growth;decision making;development cycle;familiarity conservation;increasing complexity;nonagile projects;open source project;process flexibility;process model;project evolution;software management;software organization;software team leaders;Complexity theory;Entropy;Evolution (biology);Libraries;Measurement;Programming;Software}, 
doi={10.1109/WCRE.2013.6671304}, 
month={Oct},}
@INPROCEEDINGS{6986023, 
author={Nafchi, M.Z. and Zulzalil, H. and Gandomani, T.J.}, 
booktitle={Software Engineering Conference (MySEC), 2014 8th Malaysian}, 
title={On the current agile assessment methods and approaches}, 
year={2014}, 
pages={251-254}, 
abstract={Agile methods are widely used in software companies in recent years. Many software companies are replacing their traditional development methods with Agile methods. Nonetheless, measuring agility that they have achieved has be topic of debate. So far, only a few methods and tools have been proposed to measure the agility of software companies who are moving to agile. The main aim of this paper is reviewing the existing agile assessment methods and providing a brief discussion on drawbacks of these methods. This paper tries to elucidate the actual position of these methods in measuring agility degree of companies who are moving to agile approach.}, 
keywords={DP industry;software prototyping;agile assessment methods;development methods;software companies;Adaptation models;Agile software development;Companies;Computers;Software;Software engineering;Agile assessment;Agile assessment models;Agile software development;Agile transformation;Agility assessment}, 
doi={10.1109/MySec.2014.6986023}, 
month={Sept},}
@INPROCEEDINGS{6693151, 
author={Jun Lin}, 
booktitle={Automated Software Engineering (ASE), 2013 IEEE/ACM 28th International Conference on}, 
title={Context-aware task allocation for distributed agile team}, 
year={2013}, 
pages={758-761}, 
abstract={The philosophy of Agile software development advocates the spirit of open discussion and coordination among team members to adapt to incremental changes encountered during the process. Based on our observations from 20 agile student development teams over an 8-week study in Beihang University, China, we found that the task allocation strategy as a result of following the Agile process heavily depends on the experience of the users, and cannot be guaranteed to result in efficient utilization of team resources. In this research, we propose a context-aware task allocation decision support system that balances the considerations for quality and timeliness to improve the overall utility derived from an agile software development project.We formulate the agile process as a distributed constraint optimization problem, and propose a technology framework that assesses individual developers' situations based on data collected from a Scrum-based agile process, and helps individual developers make situation-aware decisions on which tasks from the backlog to select in real-time. Preliminary analysis and simulation results show that it can achieve close to optimally efficient utilization of the developers' collective capacity. We plan to build the framework into a computer-supported collaborative development platform and refine the method through more realistic projects.}, 
keywords={groupware;optimisation;software development management;software prototyping;team working;Beihang University;China;Scrum-based agile process;agile software development;agile software development project;computer-supported collaborative development platform;context-aware task allocation;context-aware task allocation decision support system;developer collective capacity;distributed agile team;distributed constraint optimization problem;task allocation strategy;team member coordination;team member discussion;technology framework;Delays;Educational institutions;Indexes;Planning;Resource management;Software;Variable speed drives;distributed agile;project management;task allocation}, 
doi={10.1109/ASE.2013.6693151}, 
month={Nov},}
@INPROCEEDINGS{6577679, 
author={Martakis, A. and Daneva, M.}, 
booktitle={Research Challenges in Information Science (RCIS), 2013 IEEE Seventh International Conference on}, 
title={Handling requirements dependencies in agile projects: A focus group with agile software development practitioners}, 
year={2013}, 
pages={1-11}, 
abstract={Agile practices on requirements dependencies are a relatively unexplored topic in literature. Empirical studies on it are scarce. This research sets out to uncover concepts that practitioners in companies of various sizes across the globe and in various industries, use for dealing with requirements dependencies in their agile software projects. Concepts were revealed through online focus group research, using an adapted forum for discussion, and grounded theory to analyze the responses. Our study resulted in the following findings: (1) requirements dependencies occur in agile projects and are important to these projects' success just as this is known for `traditional' software projects'; (2) requirements dependencies (i) were considered and treated as part of risk management, (ii) were deemed a responsibility of the individual team members, and (iii) mostly did affect project planning; (3) continuous communication and collaboration - two essential features of any agile method, were found critical to mitigating the risks due to dependencies; (4) a hybrid approach to architecture between agile and plan-driven methods was perceived to yield maximum scalability and help coping with dependencies; (5) `cross-cutting concerns', a category of dependencies, were not uniformly understood in an agile context and require more research.}, 
keywords={software prototyping;agile projects;agile software development;plan-driven methods;requirements dependencies;requirements handling;software projects;Cognition;Communities;Companies;Context;Industries;Software;Software engineering;agile requirements engineering;agile software development;cross-cutting concerns;focus groups;grounded theory;qualitative research;requirements dependencies}, 
doi={10.1109/RCIS.2013.6577679}, 
ISSN={2151-1349}, 
month={May},}
@INPROCEEDINGS{5261055, 
author={Stolberg, S.}, 
booktitle={Agile Conference, 2009. AGILE '09.}, 
title={Enabling Agile Testing through Continuous Integration}, 
year={2009}, 
pages={369-374}, 
abstract={A continuous integration system is often considered one of the key elements involved in supporting an agile software development and testing environment. As a traditional software tester transitioning to an agile development environment it became clear to me that I would need to put this essential infrastructure in place and promote improved development practices in order to make the transition to agile testing possible. This experience report discusses a continuous integration implementation I led last year. The initial motivations for implementing continuous integration are discussed and a pre and post-assessment using Martin Fowler's" practices of continuous integration" is provided along with the technical specifics of the implementation. The report concludes with a retrospective of my experiences implementing and promoting continuous integration within the context of agile testing.}, 
keywords={integrated software;program testing;software engineering;agile development environment;agile software development;agile testing;continuous integration system;Application software;Automatic testing;Automation;Computer bugs;Feedback;Graphical user interfaces;Manuals;Programming profession;Software testing;System testing;Agile;Agile Testing;Automated Acceptance Tests;Automated Unit Tests;Continuous Integration}, 
doi={10.1109/AGILE.2009.16}, 
month={Aug},}
@INPROCEEDINGS{6567299, 
author={Kamthan, P.}, 
booktitle={Collaboration Technologies and Systems (CTS), 2013 International Conference on}, 
title={On the role of Wiki for managing knowledge in agile software development}, 
year={2013}, 
pages={622-623}, 
abstract={In the past decade, there have been a number of notable changes in industrial software engineering, including the movement towards agility. The Agile Manifesto characterizes the term “agile”, and lists a set of principles that form a basis for agile methodologies [1], such as Extreme Programming (XP), OpenUP, and Scrum. There is creation, communication, and consumption of knowledge during (agile) software development [2]. For the success of an agile project, it is crucial that such knowledge be managed effectively. In doing so, an appropriate selection and use of certain tools and technologies can be helpful. In the past few years, there has been a proliferation of Social Web Applications, such as Wiki [3]. Indeed, a number of noteworthy uses of Wiki in software engineering have been reported [4]. However, these studies are largely independent of any software development methodology, and are centered mostly on collaboration. The primary reasons for selecting Wiki for agile software development include the following: (1) the deployment of agile methodologies, especially XP and Scrum, with teams that are increasingly geographically-dispersed, (2) the involvement in sustainable software development by organizations with basic infrastructure and modest budgets for resources, and (3) the need of inexpensive, mature, and widely-available tools for supporting iterative development, by almost anybody, at anytime, anywhere, using almost any device. The purpose of this research is to provide a framework for integrating Wiki for the purpose of facilitating the dynamics of knowledge during agile software development.}, 
keywords={Web sites;project management;software development management;software prototyping;sustainable development;Scrum;XP;agile manifesto;agile methodologies;agile project;agile software development;knowledge dynamics;knowledge management;software engineering;sustainable software development methodology;wiki;Electronic publishing;Encyclopedias;Internet;Knowledge engineering;Software;Software engineering;Web 2.0;collaborative software development;human factors;human-knowledge interaction;knowledge acquisition;knowledge sharing}, 
doi={10.1109/CTS.2013.6567299}, 
month={May},}
@INPROCEEDINGS{6759213, 
author={Kakar, A.K.}, 
booktitle={System Sciences (HICSS), 2014 47th Hawaii International Conference on}, 
title={Teaching Theories Underlying Agile Methods in a Systems Development Course}, 
year={2014}, 
pages={4970-4978}, 
abstract={Presently Agile methods taught in universities focus primarily on providing hands-on experience of the process of development but ignore the evolution of, and theories behind, the Agile practices. "Without theory we are just groping in chaos" [Deming, 1986]. Knowing the 'why" in addition to the "how" of Agile methods will help develop reflective skills and give students an edge as they transition to the rapidly evolving real world of Information Systems. In this article a set of relevant theories that can be included as a module in an Agile methods course curriculum is outlined. An exposure to theories underlying Agile methods help students appreciate the relevance of the principles and practices of the Agile approach and develop authentic problem solving skills.}, 
keywords={computer science education;information systems;software prototyping;agile methods;agile practices;authentic problem solving skills;information systems;systems development course;Agile manufacturing;Business;Job design;Process control;Productivity;Software;Agile Principles;Teaching Agile Methods;Theoretical Underpinnings}, 
doi={10.1109/HICSS.2014.610}, 
month={Jan},}
@INPROCEEDINGS{5562810, 
author={Esfahani, H.C. and Yu, E. and Annosi, M.C.}, 
booktitle={Agile Conference (AGILE), 2010}, 
title={Capitalizing on Empirical Evidence during Agile Adoption}, 
year={2010}, 
pages={21-24}, 
abstract={Despite high expectations, agile methods have not always produced the desired results. The suitability of various agile practices depends on many situational factors, such as team size, project complexity, individuals competence, etc. As agile practices have become increasingly widespread, there is a growing body of literature that reports on empirical experiences, including factors that contribute to successful or problematic adoptions. However, this considerable body of knowledge is hard for the busy practitioner to digest, synthesize, and put to practice for the specific context at hand. Our previous work introduced a repository of agile methods that provides evidential knowledge about the needed conditions (requisites) and promised benefits (objectives) of various Agile Method Fragments (AMFs). The knowledge was gathered through systematic review of empirical studies which investigated the enactment of agile methods in various project situations. This paper reports the use of repository in a software process improvement initiative in one of the R&D units of Ericsson Company in Italy.}, 
keywords={software prototyping;agile method;software development;software process improvement;software repository;Book reviews;Companies;Data visualization;Programming;Software;Systematics;Agile Methods;Empirical Software Engineering;Method Engineering;Software Process Improvement}, 
doi={10.1109/AGILE.2010.7}, 
month={Aug},}
@INPROCEEDINGS{5562813, 
author={Abbas, N. and Gravell, A.M. and Wills, G.B.}, 
booktitle={Agile Conference (AGILE), 2010}, 
title={Using Factor Analysis to Generate Clusters of Agile Practices (A Guide for Agile Process Improvement)}, 
year={2010}, 
pages={11-20}, 
abstract={In this paper, factor analysis is applied on a set of data that was collected to study the effectiveness of 58 different agile practices. The analysis extracted 15 factors, each was associated with a list of practices. These factors with the associated practices can be used as a guide for agile process improvement. Correlations between the extracted factors were calculated, and the significant correlation findings suggested that people who applied iterative and incremental development and quality assurance practices had a high success rate, that communication with the customer was not very popular as it had negative correlations with governance and iterative and incremental development. Also, people who applied governance practices also applied quality assurance practices. Interestingly success rate related negatively with traditional analysis methods such as Gantt chart and detailed requirements specification.}, 
keywords={iterative methods;pattern clustering;software prototyping;Gantt chart;agile practices clusters;agile process improvement;factor analysis;incremental development;iterative development;Computer architecture;Correlation;Databases;Organizations;Programming;Quality assurance;Testing;agile practices;agile process improvement;agile software development;empirical research;factor analysis}, 
doi={10.1109/AGILE.2010.15}, 
month={Aug},}
@INPROCEEDINGS{4293607, 
author={Packlick, J.}, 
booktitle={Agile Conference (AGILE), 2007}, 
title={The Agile Maturity Map A Goal Oriented Approach to Agile Improvement}, 
year={2007}, 
pages={266-271}, 
abstract={Fulfilling the potential of agile development depends on people truly wanting to change how they work. Transitioning to new methods of development is particularly daunting in a large organization that already has a sizeable existing code base and a broad set of existing customers. In our experience, development teams tend to reach a plateau implementing a subset of agile practices, and those tend to be generally focused on the planning and iterative aspects of agile. This paper describes our experience in overcoming the barriers to increasing the adoption of agile practices. Drawing from agile principles, we have developed an approach for improvement that enables teams to accelerate change, deepen their degree of understanding, and increase their success in execution. We have found this helps teams to overcome the plateau effect.}, 
keywords={agile manufacturing;planning;agile maturity map;planning;Acceleration;Automatic testing;Coaxial components;Collaborative work;Command and control systems;Feedback;Optical reflection;Productivity;Psychology;Team working}, 
doi={10.1109/AGILE.2007.55}, 
month={Aug},}
@INPROCEEDINGS{5764064, 
author={Shi Zhong and Chen Liping and Chen Tian-en}, 
booktitle={Computer Research and Development (ICCRD), 2011 3rd International Conference on}, 
title={Agile planning and development methods}, 
year={2011}, 
volume={1}, 
pages={488-491}, 
abstract={Agile Development is a kind of iterated software development method. Its basic concept is people-centered. Estimate and scheme of Agile Methodologies are different from the traditional ones. Most papers at home and abroad about Agile Development mainly concentrate the contrast and fusion between Agile Development and traditional methods. However, researches about estimate of Agile Development procedure are lesser. This paper introduces basic methods of agile planning based on author's practice experience from two aspects: release plan, estimation of iteration, and then lists three popular agile methodologies: Xp, scrum and crystal. Finally it summarizes the whole paper.}, 
keywords={iterative methods;software prototyping;Xp methodology;agile development;agile planning method;crystal methodology;iterated software development method;iteration estimation;scrum methodology;Accuracy;Computers;Crystals;Estimation;Planning;Programming;Software;XP;agile planning;crystal;iteration;scrum;user story}, 
doi={10.1109/ICCRD.2011.5764064}, 
month={March},}
@INPROCEEDINGS{5328379, 
author={Taromirad, M. and Ramsin, R.}, 
booktitle={Software Engineering Workshop, 2008. SEW '08. 32nd Annual IEEE}, 
title={CEFAM: Comprehensive Evaluation Framework for Agile Methodologies}, 
year={2008}, 
pages={195-204}, 
abstract={Agile software development is regarded as an effective and efficient approach, mainly due to its ability to accommodate rapidly changing requirements, and to cope with modern software development challenges. There is therefore a strong tendency to use agile software development methodologies where applicable; however, the sheer number of existing agile methodologies and their variants hinders the selection of an appropriate agile methodology or method chunk. Methodology evaluation tools address this problem through providing detailed evaluations, yet no comprehensive evaluation framework is available for agile methodologies. We introduce the comprehensive evaluation framework for agile methodologies (CEFAM) as an evaluation tool for project managers and method engineers. The hierarchical (and mostly quantitative) evaluation criterion set introduced in this evaluation framework enhances the usability of the framework and provides results that are precise enough to be useful for the selection, adaptation and construction of agile methodologies.}, 
keywords={software performance evaluation;CEFAM;agile methodologies;agile software development;comprehensive evaluation framework;hierarchical evaluation criterion set;Appropriate technology;Assembly;Conferences;Engineering management;Job production systems;Lenses;Programming;Project management;Software development management;Software tools;Agile Methodologies;Evaluation Criteria;Evaluation Framework}, 
doi={10.1109/SEW.2008.19}, 
ISSN={1550-6215}, 
month={Oct},}
@INPROCEEDINGS{4599469, 
author={Long, K. and Starr, D.}, 
booktitle={Agile, 2008. AGILE '08. Conference}, 
title={Agile Supports Improved Culture and Quality for Healthwise}, 
year={2008}, 
pages={160-165}, 
abstract={Five years ago, Healthwise began transitioning into an agile and lean organization. In 2007, four years after introduction to Agile, Healthwise was identified by the Wall Street Journal as one of the top 15 small employers in the United States [Spors, K., 2007]. Healthwise uses scrum and lean principles to manage multi-disciplinary product development teams. Teams create medical content in XML, produce interactive media in multiple formats,and develop software. This report describes Healthwisepsilas learning experience for agile adoption across multi-disciplinary teams, the measurable results, and how Agile supports the Healthwise culture.}, 
keywords={XML;learning (artificial intelligence);medical computing;product development;software engineering;Healthwise;XML;agile adoption;agile supports;agile-lean organization;interactive media;multidisciplinary product development teams;multidisciplinary teams;Consumer electronics;Crisis management;Diseases;Job shop scheduling;Licenses;Manufacturing;Online Communities/Technical Collaboration;Product development;Software testing;XML;Agile;Healthwise;Scrum}, 
doi={10.1109/Agile.2008.61}, 
month={Aug},}
@INPROCEEDINGS{6899279, 
author={Raith, F. and Lindermeier, R.}, 
booktitle={Computer Software and Applications Conference (COMPSAC), 2014 IEEE 38th Annual}, 
title={Media Supported Workspaces in Agile Software Development: Doctoral Symposium Paper}, 
year={2014}, 
pages={630-633}, 
abstract={The use of software tools has become a common practice in global software engineering to handle requirements and to exchange project status amongst distributed teams and stakeholders. In context of agile software development the replacement of paper-based media (e.g. Task Board) with software tools results in heavily decreased collaboration and transparency within agile teams. Since the number of agile projects in global context increases, it is necessary to find an adequate solution to share project status without influencing the underlying agile process in a negative way. The proposed research project investigates why the replacement of paper-based media has such strong influence on group work in agile teams. Thereby, the focus of research is on the agile Task Board as the most important example for paper-based media of agile workspaces. With help of these findings we will develop a conceptual and technical solution, based on optical tracking of a paper-based Task Board, to share project status amongst stakeholders. The paper introduces the current state of the art, corresponding research questions, the entire research methods and current progress of our research.}, 
keywords={software prototyping;agile software development;agile task board;global software engineering;media supported workspace;optical tracking;paper-based media;software tool;Cognition;Context;Media;Project management;Software;Teamwork;Agile Development;Distributed Development;Informative Workspace;Task Board}, 
doi={10.1109/COMPSAC.2014.46}, 
month={July},}
@INPROCEEDINGS{6328178, 
author={de O Melo, C. and Santana, C. and Kon, F.}, 
booktitle={Software Engineering and Advanced Applications (SEAA), 2012 38th EUROMICRO Conference on}, 
title={Developers Motivation in Agile Teams}, 
year={2012}, 
pages={376-383}, 
abstract={A motivated individual is one of the cornerstones of agile software development. Although motivation has been recognized and studied in the software development field, little research has examined motivation in agile teams. Our study aims to provide a better understanding of what motivates software developers in agile environments. We conducted a systematic review of motivators in the agile context, classifying the results using the MOCC model of software engineers' motivation. Additionally, we performed three case studies in agile companies to both confirm our findings and gather new motivators. Our results suggest that motivation in the agile context is slightly different from the overall view of motivation in software development in general.}, 
keywords={DP industry;DP management;human factors;software prototyping;MOCC model;agile companies;agile software development;agile teams;developers motivation;human factors;Companies;Context;Object recognition;Software;Software engineering;Systematics;Training;Agile software development;Motivation;Multiple-case study;Systematic literature review;human factors}, 
doi={10.1109/SEAA.2012.45}, 
month={Sept},}
@INPROCEEDINGS{5347438, 
author={VanderLeest, S.H. and Buter, A.}, 
booktitle={Digital Avionics Systems Conference, 2009. DASC '09. IEEE/AIAA 28th}, 
title={Escape the waterfall: Agile for aerospace}, 
year={2009}, 
pages={6.D.3-1-6.D.3-16}, 
abstract={Agile is an umbrella software methodology that incorporates many of the best practices of the last couple of decades. In this paper, we will examine some of those key techniques for possible application in the aerospace domain, starting with a brief literature review to identify the key Agile publications and the germane DO-178B work. Virtually all Agile practices can be mapped to a DO-178B software development process. We provide a detailed analysis of the key practices, with a preliminary assessment of the ease of implementation for each. An analysis of a number of the difficulties involving transitioning from a traditional waterfall software development process to Agile practices will show that, though difficult, a transition is possible. The transition to Agile development does not require sudden, sweeping change, but instead can be accomplished through incorporating Agile methods into an existing process. We will document successful integration of test-driven development, pair programming, refactoring, an iterative approach, and other Agile methods into a traditional DO-178B software development process. We conclude with a call for a collaborative effort to further explore Agile as an answer to the urgent need for new approaches to complex systems that have become increasingly difficult to verify and validate.}, 
keywords={aerospace engineering;software engineering;DO-178B software development process;aerospace domain;agile practices;agile publications;germane DO-178B work;iterative approach;pair programming;refactoring;test-driven development;umbrella software methodology;waterfall software development process;Aerospace industry;Aerospace safety;Application software;Best practices;Educational institutions;Iterative methods;Productivity;Programming;Project management;Software testing}, 
doi={10.1109/DASC.2009.5347438}, 
month={Oct},}
@INPROCEEDINGS{5070902, 
author={Maher, P.}, 
booktitle={Information Technology: New Generations, 2009. ITNG '09. Sixth International Conference on}, 
title={Weaving Agile Software Development Techniques into a Traditional Computer Science Curriculum}, 
year={2009}, 
pages={1687-1688}, 
abstract={Agile software methodologies are quickly becoming widely used in a variety of industry projects; their flexibility provides the means to address many common problems faced in the development of software systems. Companies commonly use selected agile techniques such as unit testing, pair programming, and iterative development even if a complete methodology is not yet embraced. As these techniques become more and more prevalent in industry, it is becoming essential that they are incorporated into traditional computer science curricula. Many aspects of agile methodologies can be regarded as standard practice but taken to an extreme. Consequently, although there are some agile practices that would have to be added to a traditional curriculum, there are many that are typically already covered to a limited extent. Webster University has developed an Agile Software Development graduate course in which the main ideas are discussed, and implemented via student projects. We describe some of the key agile techniques and how they are taught in the Agile course, how we resolve the numerous challenges faced by teaching these techniques, and report on how these ideas are woven into the graduate program.}, 
keywords={computer science education;educational courses;software engineering;Webster University;agile software development graduate course;agile software development techniques;computer science curriculum;graduate program;software systems development;Application software;Collaborative software;Computer industry;Computer science;Information technology;Iterative methods;Object oriented programming;Programming profession;Testing;Weaving;agile;curriculum;education;extreme programming;methodology}, 
doi={10.1109/ITNG.2009.175}, 
month={April},}
@INPROCEEDINGS{6759185, 
author={Bishop, D. and Deokar, A.}, 
booktitle={System Sciences (HICSS), 2014 47th Hawaii International Conference on}, 
title={Toward an Understanding of Preference for Agile Software Development Methods from a Personality Theory Perspective}, 
year={2014}, 
pages={4749-4758}, 
abstract={This paper presents the results of an exploratory research study that investigates factors contributing to preference for the agile software development approaches. The initial exploration revolves around the Five Factor Model of personality and the premise that these personality factors provide a partial explanation of preference for an agile approach. A survey instrument for measuring the preference for agile methods was developed and validated. The results from the quantitative data collected from the survey study indicate that three out of the five personality factors from the Five Factor Model show a correlation with above average preference for agile methods. These factors are extra version, openness and neuroticism. The first two have a positive relationship with agile preference while neuroticism (emotional instability) has a negative relationship with agile methodology preference. To further investigate the results, an exploratory factor analysis was performed on the data, which identified three factors that may also contribute to a preference for agile methods.}, 
keywords={software prototyping;agile methodology preference;agile software development methods;emotional instability;exploratory factor analysis;exploratory research study;extra version;neuroticism;openness;personality factors;personality five factor model;personality theory perspective;Business;Convergence;Correlation;Instruments;Software;Software engineering;Software measurement;Agile;Personality Trait;Preference}, 
doi={10.1109/HICSS.2014.583}, 
month={Jan},}
@INPROCEEDINGS{5432632, 
author={Ren, L.}, 
booktitle={Knowledge Discovery and Data Mining, 2010. WKDD '10. Third International Conference on}, 
title={The Evaluation of Agile Supply Chain Management Based on AHP}, 
year={2010}, 
pages={272-275}, 
abstract={Agile supply chain management is a new type of management mode, which can reasonably dispatch and control logistics, information flow, capital flow in agile supply chain. In the paper, analytic hierarchy process technology is presented to evaluate the agile supply chain management. The evaluation indexes of agile supply chain management are determined, and the structure model of evaluation indexes of agile supply chain management is established. The evaluation model for agile supply chain management based on AHP is established based on the analysis for evaluation indexes of agile supply chain management. The experimental results show that the evaluation model of agile supply chain management based on AHP is usable.}, 
keywords={decision making;logistics;supply chain management;AHP;agile supply chain management evaluation;analytic hierarchy process technology;capital flow;evaluation indexes;information flow;logistics control;management mode;Conference management;Data mining;Inventory management;Knowledge management;Logistics;Paper technology;Performance analysis;Road transportation;Supply chain management;Supply chains;agile supply chain management;analytic hierarchy process;evaluation technology;structure model}, 
doi={10.1109/WKDD.2010.62}, 
month={Jan},}
@INPROCEEDINGS{6910401, 
author={Paasivaara, M. and Lassenius, C.}, 
booktitle={Agile Conference (AGILE), 2014}, 
title={Deepening Our Understanding of Communities of Practice in Large-Scale Agile Development}, 
year={2014}, 
pages={37-40}, 
abstract={Communities of Practice (CoPs) are groups of experts who share a common interest or topic and collectively want to deepen their knowledge. The use of CoPs is one of the practices that agile practitioner literature suggests for knowledge sharing and coordination in large-scale agile software development. Even though CoPs are largely used and studied in other industrial contexts, their usage in industrial large-scale software development has not received much research attention. In this paper we describe our findings from a case study of a large software development organization that successfully used CoPs to support their large-scale agile implementation, as well as their transformation from the waterfall model to Lean and Agile. In this case, the use of CoPs was one of the a key success factors. To advance both research and practice we suggest that future research should pay more attention on CoPs in large-scale agile, e.g. By studying how CoPs should be cultivated in the organization, how they work in practice, what they are used for, as well as the benefits and challenges of cultivating and implementing CoPs.}, 
keywords={personnel;software development management;software prototyping;CoPs;communities of practice;knowledge sharing;large-scale agile software development;lean development;software development organization;waterfall model;Agile software development;Buildings;Communities;Context;Organizations;Software;Software engineering;Scrum;communities of practice;large-scale agile development}, 
doi={10.1109/AGILE.2014.18}, 
month={July},}
@INPROCEEDINGS{4293603, 
author={Cloke, G.}, 
booktitle={Agile Conference (AGILE), 2007}, 
title={GET YOUR AGILE FREAK ON! Agile Adoption at Yahoo! Music}, 
year={2007}, 
pages={240-248}, 
abstract={Few businesses are more volatile than the internet; few markets as fiercely contested as the still-emerging, passion-inducing and fast-paced world of digital music. What better opportunity, therefore, to apply agile principles as a means of delivering maximum value to a mass market while embracing chaotic change? Yet the elements that made Yahoo! Music cry out for an agile approach also presented major stumbling blocks - not least the challenge of harnessing teams and technology obtained by serial acquisition, with competing passions, perspectives and technical expertise. Ultimately the team was able to face and overcome these challenges by unifying around an increasingly agile business philosophy that addresses not only software development, but the entire Music organization. In this experience report, the lessons of agile adoption at Yahoo! Music are considered, applied and finally distilled into a set of general principles that we hope might inspire other teams to get their agile freak on!}, 
keywords={Web sites;music;Internet;Yahoo! Music;agile business philosophy;agile principles;digital music;mass market;serial acquisition;software development;Chaos;Engineering management;Financial management;Force control;Internet;Law;Legal factors;Marketing management;Programming;Quality management}, 
doi={10.1109/AGILE.2007.30}, 
month={Aug},}
@INPROCEEDINGS{7133028, 
author={Domah, D. and Mitropoulos, F.J.}, 
booktitle={SoutheastCon 2015}, 
title={The NERV methodology: A lightweight process for addressing non-functional requirements in agile software development}, 
year={2015}, 
pages={1-7}, 
abstract={Agile software development has become very popular around the world in recent years, with methods such as Scrum and Extreme Programming (XP). Literature suggests that functionality is the primary focus in Agile processes while non-functional requirements (NFRs) are either ignored or ill-defined. However, for software to be of good quality both functional requirements (FRs) and NFRs need to be taken into consideration; lack of attention to NFRs has been documented to be the cause of failure for many software projects. Hence special attention needs to be focused on NFRs in Agile software development. Requirements elicitation, implementation in design, development, and validation are important activities of software development. Agile has good processes to elicit functional requirements that are captured as user stories. However, NFRs elicitation has not been given enough attention within Agile processes. Additionally, reasoning and validating of NFRs have been lacking. This research proposes the “NERV Methodology: Nonfunctional Requirements Elicitation, Reasoning, and Validation in Agile Processes.” Current results show the artifacts developed in this research can potentially help software development organizations address NFRs in early Agile processes.}, 
keywords={formal specification;software prototyping;FR;NERV methodology;NFR;agile software development;functional requirements;lightweight process;nonfunctional requirements;software projects;Computer architecture;Decision support systems;Guidelines;Taxonomy;Agile software development;Agile user stories;NERV Methodology;NFR;NFR Elicitation Taxonomy;NFR Quantification Taxonomy;NFR Reasoning Taxonomy;NFRusCOM;Scrum;functional requirements;non-functional requirements}, 
doi={10.1109/SECON.2015.7133028}, 
month={April},}
@INPROCEEDINGS{4599498, 
author={Drummond, B. and Unson, J.F.}, 
booktitle={Agile, 2008. AGILE '08. Conference}, 
title={Yahoo! Distributed Agile: Notes from the World Over}, 
year={2008}, 
pages={315-321}, 
abstract={In an ideal world, everyone on an Agile team is in the same physical location, fostering cooperation and collaboration all throughout the teampsilas growth. Unfortunately the real world doesn't always work that way. The current trend to cut costs and increase revenue by off-shoring and establishing multiple company campuses around the world for continuous development is inherently anti-Agile. Does this mean that we cannot do Agile with distributed teams? As Scrum coaches at Yahoo!, we experience challenges with distributed Agile teams on a day-to-day basis. Some teams have failed miserably, while others have succeeded well - surprising us with their novel solutions in order to make Agile work. Our objective is to highlight successful patterns that we have noticed that significantly helped in making these distributed teams thrive.}, 
keywords={distributed processing;search engines;Yahoo!;agile team;distributed teams;multiple company campuses;scrum coaches;Animation;Bandwidth;Collaborative work;Costs;Design engineering;Digital audio broadcasting;Engineering management;Meeting planning;Product design;Videoconference;agile values;distributed agile;experience report}, 
doi={10.1109/Agile.2008.21}, 
month={Aug},}
@INPROCEEDINGS{1609827, 
author={Hodgetts, P.}, 
booktitle={Agile Conference, 2005. Proceedings}, 
title={Experiences integrating sophisticated user experience design practices into agile processes}, 
year={2005}, 
pages={235-242}, 
abstract={Most significant software processes involve a wide range of disciplines, from programming to testing, and from documentation to database development. Unfortunately, agile processes are typically presented from the point of view of programmers, with the other disciplines often left feeling excluded and disenfranchised. One such discipline is that of user experience design (often abbreviated UED), a discipline encompassing several key specialties including user research, interface design, visual design and usability testing. UED activities span the full lifecycle of product development from early requirements analysis to construction and testing, spanning both large scale system issues and detailed components, with its work products forming key inputs and deliverables of many development activities. In this experience report, we discuss the author's coaching experiences integrating sophisticated UED practices into the agile process initiatives of several organizations. His background is initially that of a programmer and later that of an agile process coach, and we'll explore his journey understanding UED practices and how they map to popular agile processes, mainly Scrum in "agile software development with Scrum" by K. Schwaber and M. Beedle (2002) and extreme programming in "extreme programming explained: embrace change" by K. Beck (2000). We'll chronicle the teams' struggles to come to grips with the often programming centric orientation of agile processes, and their ongoing efforts to integrate their UED best practices into the incremental, collaborative world of agile processes.}, 
keywords={software engineering;user centred design;agile process;extreme programming;interface design;product development lifecycle;requirements analysis;software process;usability testing;user experience design;user research;visual design;Best practices;Documentation;Large-scale systems;Life testing;Product development;Programming profession;Software testing;System testing;Usability;Visual databases}, 
doi={10.1109/ADC.2005.24}, 
month={July},}
@INPROCEEDINGS{7100471, 
author={Popli, R. and Chauahn, N.}, 
booktitle={Computing for Sustainable Global Development (INDIACom), 2015 2nd International Conference on}, 
title={Managing uncertainty of story-points in Agile software}, 
year={2015}, 
pages={1357-1361}, 
abstract={Agile methodologies for software development take a novel, lightweight approach to most aspects of designing and producing applications. Agile software development is an iterative development method. Its basic concept is people - centered and it acknowledges that requirements can change. Due to changing nature of Agile size of user-story is not certain and also new user-stories can be added or existing user-stories can be removed. This creates uncertainty in agile project that leads to poor estimation of time and cost. The proposed technique of managing uncertainty in agile reduces uncertainty by reducing the size of the user-story to be estimated.}, 
keywords={iterative methods;project management;software prototyping;agile project;agile size;agile software development;cost estimation;iterative development method;story-point uncertainty management;time estimation;user-story;user-story size reduction;Agile software development;Estimation;Paints;Planning;Reliability;Software;Uncertainty;Agile Software Development;Estimation;Scrum;User-stories}, 
month={March},}
@INPROCEEDINGS{5998319, 
author={Dai Lei and Liu Lian and Sun Xiao}, 
booktitle={Management and Service Science (MASS), 2011 International Conference on}, 
title={The System Construction and Research Review of Agile Manufacturing}, 
year={2011}, 
pages={1-4}, 
abstract={In this paper, we systematically reviewed the main achievements of the existing studies on agile manufacturing form virtual enterprise, agile information technology, agile supply chain, agile human resource management, and give the conclusion and inspiration of the study.}, 
keywords={agile manufacturing;human resource management;production engineering computing;supply chain management;virtual enterprises;agile human resource management;agile information technology;agile manufacturing;agile supply chain;virtual enterprise;Agile manufacturing;Information technology;Organizations;Supply chains;Virtual enterprises}, 
doi={10.1109/ICMSS.2011.5998319}, 
month={Aug},}
@INPROCEEDINGS{5261113, 
author={Lee, J.C. and Scott McCrickard, D. and Stevens, K.T.}, 
booktitle={Agile Conference, 2009. AGILE '09.}, 
title={Examining the Foundations of Agile Usability with eXtreme Scenario-Based Design}, 
year={2009}, 
pages={3-10}, 
abstract={The increasing use of agile methods to develop UI-intensive systems has led to a need to find ways of integrating usability into agile teams reconciling the convergence and divergent points between the two areas. Agile usability researchers at Virginia Tech have partnered with Meridium, Inc. to develop and implement an integrated approach known as extreme scenario based design (XSBD). Based on an analysis of core values and principles of both areas, and work from other agile usability researchers we identified four requirements that need to be met for an integrated approach to work effectively. We report on the results of using XSBD to develop a product at Meridium, summarizing how it addresses those requirements and draw conclusions about the effectiveness of the approach making connections back to core principles of agile usability.}, 
keywords={software engineering;user interfaces;Meridium Incorporated;UI-intensive systems;Virginia Tech;XSBD approach;agile methods;agile usability;extreme scenario based design;user interface;Collaborative work;Computer industry;Computer science;Convergence;Humans;Marketing and sales;Productivity;Programming;USA Councils;Usability;agile;central design record;extreme scenario-based design;usability}, 
doi={10.1109/AGILE.2009.30}, 
month={Aug},}
@INPROCEEDINGS{6298093, 
author={Dorairaj, Siva and Noble, J. and Malik, P.}, 
booktitle={Agile Conference (AGILE), 2012}, 
title={Knowledge Management in Distributed Agile Software Development}, 
year={2012}, 
pages={64-73}, 
abstract={Software development teams need highly valuable knowledge to carry out knowledge-intensive development activities. Agile teams are cross-functional teams that promote sharing of project-specific knowledge through frequent faceto-face interaction, effective communication and customer collaboration. Knowledge sharing is difficult for distributed Agile teams due to spatial, temporal, and cultural barriers, which negatively affect face-to-face interaction, communication and collaboration. There seems to be very few studies that focus on knowledge management in distributed Agile teams. Through a Grounded Theory study that involved 45 participants from 28 different software companies in the USA, India and Australia, we investigate distributed software development from the specific perspective of Agile teams. In this paper, we describe how Agile teams gather, store, share and use knowledge in distributed software development.}, 
keywords={DP industry;distributed processing;knowledge management;software prototyping;Australia;Grounded theory;India;USA;cross-functional teams;cultural barriers;customer collaboration;distributed agile software development;distributed agile teams;effective communication;face-to-face interaction;knowledge management;knowledge-intensive development activities;project-specific knowledge sharing;software companies;spatial barriers;temporal barriers;Collaboration;Communities;Internet;Knowledge management;Organizations;Software;Training;Agile Methods;Distributed Software Development;Grounded Theory;Knowledge Management;Knowledge Sharing}, 
doi={10.1109/Agile.2012.17}, 
month={Aug},}
@INPROCEEDINGS{6914066, 
author={Asnawi, A.L. and Gravell, A.M. and Wills, G.B.}, 
booktitle={Information and Communication Technology (ICoICT), 2014 2nd International Conference on}, 
title={Significant aspects in relation to Agile usage: Malaysian perspective}, 
year={2014}, 
pages={205-210}, 
abstract={Agile methods are an established process for developing software nowadays. There is, however, less evidence on their usage among software practitioners in Malaysia. While the methods have become mainstream in other regions, that is not the case in this country. This paper investigates important aspects in relation to Agile usage in Malaysia. The study was conducted using a questionnaire with 207 software practitioners from the country. Non parametric analysis (Chi-Square test) was conducted to investigate the relationship of Agile usage with (i) language, (ii) place of education and (iii) organization types. Results showed Agile usage has significant association with the two aspects; (i) language and (ii) organization types. It is suggested that these two aspects must be taken into consideration if one organization plans to adopt the methods. The results also revealed that many of the Agile users are not being exposed to the method before they start using it. We aim to provide knowledge and evidence on the suitability of Agile methods to the people in the country and nearby region.}, 
keywords={software prototyping;Malaysia;agile methods;agile usage;chi-square test;education location;language;nonparametric analysis;organization types;Communications technology;Companies;Conferences;Education;Government;Software;Agile methods;adoption;agile usage;aspects;language;sector}, 
doi={10.1109/ICoICT.2014.6914066}, 
month={May},}
@INPROCEEDINGS{1667594, 
author={Gat, I.}, 
booktitle={Agile Conference, 2006}, 
title={How BMC is scaling agile development}, 
year={2006}, 
pages={6 pp.-320}, 
abstract={This report examines the large-scale deployment of agile software development in the Infrastructure Management Business Unit of BMC Software. The paper identifies and demonstrates several critical success, factors $such as empowerment, risk taking, and top-notch agile consulting - applying agile methodology as part of the overall software engineering "stack" and changing organizational structures. In particular, it highlights the relationship between empowerment and risk-taking, and suggests that the two should be managed in tandem as the foundation on which successful agile projects can evolve. Finally, the paper emphasizes the importance of implementing agile methodology across multiple corporate functions $marketing, sales, support, professional services, etc. It concludes with a review of the benefits that this approach provides to the end customers}, 
keywords={project management;software development management;BMC Software;Infrastructure Management Business Unit;agile development;agile projects;agile software development;corporate functions;organizational structures;risk taking;software engineering;top-notch agile consulting;Bicycles;Large-scale systems;Marketing and sales;Programming;Project management;Quality management;Risk management;Scalability;Software development management;Software engineering}, 
doi={10.1109/AGILE.2006.33}, 
month={July},}